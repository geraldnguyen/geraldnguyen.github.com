<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Career Development on Gerald Nguyen</title>
    <link>https://geraldnguyen.github.io/categories/career-development/</link>
    <description>Recent content in Career Development on Gerald Nguyen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Dec 2022 09:19:42 +0100</lastBuildDate>
    <atom:link href="https://geraldnguyen.github.io/categories/career-development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Five Minimum Viable Javascript Interview Questions</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/5-minimum-viable-javascript-interview-questions/</link>
      <pubDate>Fri, 09 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/5-minimum-viable-javascript-interview-questions/</guid>
      <description>This is part of my Five Minimum Viable Interview Questions series where I research and compile Five essential interview questions on each interview topic. All of these questions aim to assess real and practical skills expected at work&#xA;It is common nowadays for companies to hire for full-stack positions. A full-stack developer is typically expected to work on both frontend and backend development. That same expectation applies to interviews.</description>
    </item>
    <item>
      <title>Code Review as an interview tool</title>
      <link>https://geraldnguyen.github.io/posts/2022/11/code-review-as-an-interview-tool/</link>
      <pubDate>Tue, 22 Nov 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/11/code-review-as-an-interview-tool/</guid>
      <description>Rationale In all software development teams that I have been part of, we always value and encourage everyone to participate in code reviews. We see it as an effective way of learning and contributing. It has an important place in my Engineering practice.&#xA;We learn when we review other people’s codes. That’s actually an effective way of keeping up-to-date with what is happening to the code base, what sort of problems our colleagues are trying to solve, and what techniques they employed to solve them.</description>
    </item>
    <item>
      <title>Java Stream Interview Tests - takeWhile</title>
      <link>https://geraldnguyen.github.io/posts/2021/11/java-stream-interview-tests-takewhile/</link>
      <pubDate>Mon, 01 Nov 2021 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2021/11/java-stream-interview-tests-takewhile/</guid>
      <description>Generated by Dall-e&#xA;Why Java Stream? Since its introduction in Java 8, Stream has become more and more the preferred way of processing collection. But some of its APIs, are complicated and hard to understand, especially those of Collector and those for reduction.&#xA;I dare say that even experienced Java Stream users may still find them intimidating. Despite using it for several years and having prior experience with Stream-like operations in other programming languages, I still occasionally find some Stream-related tasks challenging.</description>
    </item>
    <item>
      <title>Java Stream Interview Tests - Distinct Characters</title>
      <link>https://geraldnguyen.github.io/posts/2021/10/java-stream-interview-tests-distinct-characters/</link>
      <pubDate>Sat, 30 Oct 2021 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2021/10/java-stream-interview-tests-distinct-characters/</guid>
      <description>Requirement Given a sentence comprising of one or multiple words separated by space (e.g. java, Hello World, aadsbbaba), return a sorted list of distinct characters excluding space&#xA;Solve this problem using Java Stream&#xA;Hint: Use String.split(“”)to split a string into a String[], then use String.charAt(0) to convert each single-char string to char&#xA;Discussion This problem tests candidate’s knowledge of the following Stream methods:&#xA;Stream.of(...) or Array.stream(...) to convert an array of single-char string (e.</description>
    </item>
    <item>
      <title>Spring REST API Interview Questions</title>
      <link>https://geraldnguyen.github.io/posts/2021/10/spring-rest-api-interview-questions/</link>
      <pubDate>Tue, 19 Oct 2021 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2021/10/spring-rest-api-interview-questions/</guid>
      <description>#1 Complete the REST controller Objective: Assess a candidate’s practical experience and knowledge&#xA;Instructions: Given the below controller, fill in Spring annotations according to instructions given in the code comments&#xA;Pay attention to:&#xA;Did the candidate notice the repetition of /friends prefix? Did he/she suggest a @RequestMapping(/friends) on the controller class instead? How did he/she annotate the optional parameter name and id in findFriends(String name, Long id) method? What annotation can be used to force a 204 (no content) response?</description>
    </item>
    <item>
      <title>How Sun&#39;s certification exam are prepared</title>
      <link>https://geraldnguyen.github.io/posts/2011/01/2011-01-09-how-sun-certification-exam-prepared/</link>
      <pubDate>Sun, 09 Jan 2011 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2011/01/2011-01-09-how-sun-certification-exam-prepared/</guid>
      <description>&amp;ldquo;Without getting into too much detail, I can tell you some of what Sun did to create their various Java certification exams. So, in the old Sun days&amp;hellip;&#xA;The whole process to create a new exam takes a long time. A first team of experts is assembled and for several months the team develops a new set of objectives. Once created, the new set of objectives go through all sorts of vetting / verification processes.</description>
    </item>
  </channel>
</rss>
