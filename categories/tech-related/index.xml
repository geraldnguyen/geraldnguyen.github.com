<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Related on Gerald Nguyen</title>
    <link>https://geraldnguyen.github.io/categories/tech-related/</link>
    <description>Recent content in Tech Related on Gerald Nguyen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Aug 2024 09:19:42 +0100</lastBuildDate>
    <atom:link href="https://geraldnguyen.github.io/categories/tech-related/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo - Displaying Quotes the Medium styles</title>
      <link>https://geraldnguyen.github.io/posts/2024/08/hugo-block-quote-pull-quote/</link>
      <pubDate>Thu, 29 Aug 2024 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2024/08/hugo-block-quote-pull-quote/</guid>
      <description>&lt;p&gt;&lt;em&gt;Please ignore the &lt;code&gt;\&lt;/code&gt; in front of &lt;code&gt;{&lt;/code&gt; in code examples. It is used to prevent Hugo from processing the shortcodes even in code block&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;the-blockquote&#34;&gt;The Block Quote&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This is a block quote&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; This is a block quote&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;the-pull-quote&#34;&gt;The Pull Quote&lt;/h1&gt;&#xA;&lt;p&gt;We need a custom quote.html shortcode and some custom CSS&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;The &lt;code&gt;quote&lt;/code&gt; shortcode&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# quote.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{$quote := .Get 0}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;blockquote&lt;/span&gt; &lt;span style=&#34;color:#008080&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;medium-quote&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ markdownify $quote }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ markdownify .Inner }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;blockquote&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Hugo - Displaying Images the Medium way</title>
      <link>https://geraldnguyen.github.io/posts/2024/08/hugo-displaying-images-the-medium-way/</link>
      <pubDate>Mon, 26 Aug 2024 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2024/08/hugo-displaying-images-the-medium-way/</guid>
      <description>&lt;p&gt;&lt;em&gt;Please ignore the &lt;code&gt;\&lt;/code&gt; in front of &lt;code&gt;{&lt;/code&gt; in code examples. It is used to prevent Hugo from processing the shortcodes even in code block&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;the-markdown-way&#34;&gt;The Markdown way&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;![alt title](1_nHC2UMz-xJM-lvPPwSh_vQ.webp)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;1_nHC2UMz-xJM-lvPPwSh_vQ.webp&#34; alt=&#34;title&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Though it is recommended, the &lt;code&gt;alt-title&lt;/code&gt; is optional. The above can be expressed as &lt;code&gt;![alt title](path-to-image.jpg)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Simple&lt;/li&gt;&#xA;&lt;li&gt;Natively markdown&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;No caption&lt;/li&gt;&#xA;&lt;li&gt;Center alignment not guaranteed&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;the-mediumway&#34;&gt;The Medium way&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{\&amp;lt; figure src=&amp;#34;1_nHC2UMz-xJM-lvPPwSh_vQ.webp&amp;#34; caption=&amp;#34;optional caption&amp;#34; \&amp;gt;}}&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Top Publications For Technical Writers — Jan 2023</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/top-publication-for-technical-writer-jan-2023/</link>
      <pubDate>Thu, 19 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/top-publication-for-technical-writer-jan-2023/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/top-publication-for-technical-writer-jan-2023/0_T7-l6zSZumlNZF5i.jpg&#34;&#xA;    alt=&#34;Photo by Scott Graham on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/ko/@homajob?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Scott Graham&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;the-incumbents&#34;&gt;The Incumbents&lt;/h1&gt;&#xA;&lt;h2 id=&#34;toward-data-sciencehttpstowardsdatasciencecom&#34;&gt;&lt;a href=&#34;https://towardsdatascience.com/&#34;&gt;Toward Data Science&lt;/a&gt;&lt;/h2&gt;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;medium-quote&#34;&gt;&#xA;  &lt;p&gt;&#xA;    Your home for data science. A Medium publication sharing concepts, ideas and codes.&#xA;    &#xA;  &lt;/p&gt;</description>
    </item>
    <item>
      <title>What is a 2-Factor Authentication(2FA)?</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/what-is-2-factor-authentication-2fa/</link>
      <pubDate>Mon, 16 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/what-is-2-factor-authentication-2fa/</guid>
      <description>&lt;h1 id=&#34;the-wolf-the-kid-and-the-goat&#34;&gt;The Wolf, the Kid, and the Goat&lt;/h1&gt;&#xA;&lt;p&gt;You probably have heard of this popular fable before.&lt;/p&gt;&#xA;&lt;p&gt;Mother Goat in her wisdom had carefully &lt;em&gt;secured&lt;/em&gt; her house and her Kid before going out. She even reminded her Kid to check the &lt;em&gt;password&lt;/em&gt; before opening the door. Her password was good. It was &lt;em&gt;very long&lt;/em&gt; and contained &lt;em&gt;non-alphabets&lt;/em&gt; and &lt;em&gt;special characters.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;As fate had it, a Wolf was nearby, he &lt;em&gt;eavesdropped&lt;/em&gt; and learned of the mother’s password. He was so sure of filling his belly. He even &lt;em&gt;mimicked&lt;/em&gt; the way mother Goat softly said her password&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enable Comment in Hugo site</title>
      <link>https://geraldnguyen.github.io/posts/2021/10/2021-10-17-enable-commenting/</link>
      <pubDate>Sun, 17 Oct 2021 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2021/10/2021-10-17-enable-commenting/</guid>
      <description>&lt;p&gt;&lt;em&gt;Note 2024-08-15: An earlier version of this site ran on &lt;a href=&#34;https://getdoks.org/&#34;&gt;doks&lt;/a&gt;. I&amp;rsquo;m in the middle of updating it to a medium-like theme&lt;/em&gt;*&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;You may have noticed that this website is using a powerful-yet-easy-to-use &lt;a href=&#34;https://getdoks.org/&#34;&gt;doks&lt;/a&gt; theme.&lt;/p&gt;&#xA;&lt;p&gt;As I wanted to have more interaction with my readers, enabling comment is a first step.&lt;/p&gt;&#xA;&lt;h2 id=&#34;enable-comment-in-hugo&#34;&gt;Enable Comment in Hugo&lt;/h2&gt;&#xA;&lt;p&gt;Hugo provides built-in support for Disqus. It ships with a &lt;code&gt;_internal/disqus.html&lt;/code&gt; template that we can simply copy &amp;amp; paste to wherever we want comment to appear. The steps are simple:&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Excel] Bulk Linking Cells to Sheets Whose Name Equates Cell&#39;s value</title>
      <link>https://geraldnguyen.github.io/posts/2013/12/2013-12-30-bulk-linking-cell-to-sheets/</link>
      <pubDate>Tue, 10 Sep 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/12/2013-12-30-bulk-linking-cell-to-sheets/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Sub CreateLinkToSheet()&#xA;    Dim c As Range&#xA;    For Each c In Selection&#xA;        &amp;#39; MsgBox c.Value&#xA;        ActiveSheet.Hyperlinks.Add Anchor:=c, Address:=&amp;#34;&amp;#34;, _&#xA;        SubAddress:=c.Value &amp;amp; &amp;#34;!A1&amp;#34;, TextToDisplay:=c.Value&#xA;    Next c&#xA;End Sub&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;How to run&lt;/strong&gt;: Select the cells to create link and run the macro&lt;/p&gt;</description>
    </item>
    <item>
      <title>[VBA] Save Attachements from Multiple Emails</title>
      <link>https://geraldnguyen.github.io/posts/2013/09/2013-09-02-save-attachments-from-multiple-emails/</link>
      <pubDate>Mon, 02 Sep 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/09/2013-09-02-save-attachments-from-multiple-emails/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Prerequisite&lt;/strong&gt;: Enable Developer tab, macro security and create “C:\mailattachment\” folder if not exists&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Instruction&lt;/strong&gt;: Select emails which have attachment to save (e.g. email containing daily report), select Developer, Macro, SaveAttachment&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Sub SaveAttachment()&#xA;    Dim myOlapp As Outlook.Application&#xA;    Dim myNameSpace As Outlook.NameSpace&#xA;    Dim myFolder As Outlook.MAPIFolder&#xA;    Dim myItem As Outlook.MailItem&#xA;    Dim myAttachment As Outlook.Attachment&#xA;    Dim I As Long&#xA;      &#xA;    Set myOlapp = CreateObject(&amp;#34;Outlook.Application&amp;#34;)&#xA;    &amp;#39;Set myNameSpace = myOlapp.GetNamespace(&amp;#34;MAPI&amp;#34;)&#xA;    &amp;#39;Set myFolder = myNameSpace.GetDefaultFolder(olFolderInbox)&#xA;    &amp;#39;Set myFolder = myFolder.Folders(&amp;#34;Ethsys&amp;#34;)&#xA;    &amp;#39;Set myFolder = myFolder.Folders(&amp;#34;Ethsys Operation Alert&amp;#34;)&#xA;      &#xA;    &amp;#39;For Each myItem In myFolder.Items&#xA;        &amp;#39;If myItem.Attachments.Count &amp;lt;&amp;gt; 0 Then&#xA;            &amp;#39;For Each myAttachment In myItem.Attachments&#xA;                &amp;#39;MsgBox myAttachment.FileName&#xA;            &amp;#39;Next&#xA;        &amp;#39;End If&#xA;    &amp;#39;Next&#xA;     &#xA;     &#xA;    For Each myItem In Application.ActiveExplorer.Selection&#xA;        If myItem.Attachments.Count &amp;lt;&amp;gt; 0 Then&#xA;            For Each myAttachment In myItem.Attachments&#xA;                &amp;#39;MsgBox myAttachment.FileName&#xA;                myAttachment.SaveAsFile (&amp;#34;C:\mailattachment\&amp;#34; &amp;amp; myAttachment.DisplayName)&#xA;            Next&#xA;        End If&#xA;    Next&#xA;     &#xA;End Sub&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Myths of Secure Web Browsing</title>
      <link>https://geraldnguyen.github.io/posts/2013/05/2013-05-18-myths-of-secure-web-browsing/</link>
      <pubDate>Sat, 18 May 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/05/2013-05-18-myths-of-secure-web-browsing/</guid>
      <description>&lt;h2 id=&#34;1-i-am-safe-because-i-never-visited-porn-website&#34;&gt;1. I am safe because I never visited porn website&lt;/h2&gt;&#xA;&lt;p&gt;Wrong. Nowadays, many more malware infection are linked to visit to legitimate and popular websites than porn or counterfeit sites.&lt;/p&gt;&#xA;&lt;p&gt;According to Cisco 2013 Annual Security Report, Business/Industry site category stands at 3rd position behind advertising and dynamic content categories in the top 20 dangerous website categories. Included are Shopping (8th), Travel (9th), News (13th). Porn or counterfeit products (e.g. cheap Viagra) didn’t make it to top 20.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
