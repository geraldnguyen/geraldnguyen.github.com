<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Gerald Nguyen</title>
    <link>https://geraldnguyen.github.io/posts/</link>
    <description>Recent content in Posts on Gerald Nguyen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Aug 2024 09:19:42 +0100</lastBuildDate>
    <atom:link href="https://geraldnguyen.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo - Displaying Quotes the Medium styles</title>
      <link>https://geraldnguyen.github.io/posts/2024/08/hugo-block-quote-pull-quote/</link>
      <pubDate>Thu, 29 Aug 2024 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2024/08/hugo-block-quote-pull-quote/</guid>
      <description>&lt;p&gt;&lt;em&gt;Please ignore the &lt;code&gt;\&lt;/code&gt; in front of &lt;code&gt;{&lt;/code&gt; in code examples. It is used to prevent Hugo from processing the shortcodes even in code block&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;the-blockquote&#34;&gt;The Block Quote&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This is a block quote&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; This is a block quote&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;the-pull-quote&#34;&gt;The Pull Quote&lt;/h1&gt;&#xA;&lt;p&gt;We need a custom quote.html shortcode and some custom CSS&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;The &lt;code&gt;quote&lt;/code&gt; shortcode&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# quote.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{$quote := .Get 0}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;blockquote&lt;/span&gt; &lt;span style=&#34;color:#008080&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;medium-quote&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ markdownify $quote }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ markdownify .Inner }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;blockquote&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Hugo - Displaying Images the Medium way</title>
      <link>https://geraldnguyen.github.io/posts/2024/08/hugo-displaying-images-the-medium-way/</link>
      <pubDate>Mon, 26 Aug 2024 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2024/08/hugo-displaying-images-the-medium-way/</guid>
      <description>&lt;p&gt;&lt;em&gt;Please ignore the &lt;code&gt;\&lt;/code&gt; in front of &lt;code&gt;{&lt;/code&gt; in code examples. It is used to prevent Hugo from processing the shortcodes even in code block&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;the-markdown-way&#34;&gt;The Markdown way&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;![alt title](1_nHC2UMz-xJM-lvPPwSh_vQ.webp)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;1_nHC2UMz-xJM-lvPPwSh_vQ.webp&#34; alt=&#34;title&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Though it is recommended, the &lt;code&gt;alt-title&lt;/code&gt; is optional. The above can be expressed as &lt;code&gt;![alt title](path-to-image.jpg)&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Simple&lt;/li&gt;&#xA;&lt;li&gt;Natively markdown&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;No caption&lt;/li&gt;&#xA;&lt;li&gt;Center alignment not guaranteed&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;the-mediumway&#34;&gt;The Medium way&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{\&amp;lt; figure src=&amp;#34;1_nHC2UMz-xJM-lvPPwSh_vQ.webp&amp;#34; caption=&amp;#34;optional caption&amp;#34; \&amp;gt;}}&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Behavior Driven Development (BDD) with Selenium in Python</title>
      <link>https://geraldnguyen.github.io/posts/2024/05/behavior-driven-development-bdd-with-selenium-in-python/</link>
      <pubDate>Mon, 20 May 2024 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2024/05/behavior-driven-development-bdd-with-selenium-in-python/</guid>
      <description>&lt;p&gt;This is a continuation from my previous article where we learned the basic of Selenium and how to program it in Python to perform UI automation testing.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://levelup.gitconnected.com/getting-started-on-ui-automation-testing-using-selenium-with-python-b4903dad5a74?source=post_page-----58390fcc0325--------------------------------&#34;&gt;Getting started on UI automation testing using Selenium with Python&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;container alert alert-secondary&#34;&gt;&#xA;    &lt;div&gt;&lt;a href=&#34;https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/&#34; alt=&#34;Five Minimum Viable Interview Questions series — Updated 17 Feb 2023&#34;&gt;&#xA;        &lt;strong&gt;Five Minimum Viable Interview Questions series — Updated 17 Feb 2023&lt;/strong&gt;&#xA;    &lt;/a&gt;&lt;/div&gt;&#xA;    &lt;div class=&#34;d-flex align-items-start&#34;&gt;&#xA;      &#xA;          &#xA;          &#xA;              &#xA;              &lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/0_qxJpBdXPqAG2Z7NJ_hu18368998056076422812.jpg&#34; alt=&#34;Five Minimum Viable Interview Questions series — Updated 17 Feb 2023&#34; /&gt;&#xA;          &#xA;      &#xA;      &lt;p class=&#34;px-1&#34;&gt;&#xA;        &lt;small&gt;Interviewer: ask them if your interview is running out of time. Interviewee: practice them if your preparation is running out of time.&lt;/small&gt;&#xA;      &lt;/p&gt;</description>
    </item>
    <item>
      <title>How to join video files in a semi-automated way</title>
      <link>https://geraldnguyen.github.io/posts/2024/05/how-to-join-video-semi-automated/</link>
      <pubDate>Sat, 04 May 2024 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2024/05/how-to-join-video-semi-automated/</guid>
      <description>&lt;p&gt;TLDR;&lt;/p&gt;&#xA;&lt;div class=&#34;embed video-player&#34; style=&#34;position:relative;padding-bottom:56.25%;height:0;overflow:hidden;&#34;&gt; &#xA;  &lt;iframe&#xA;    style=&#34;width:100%;height:100%;position:absolute;left:0px;top:0px;overflow:hidden&#34; frameborder=&#34;0&#34; type=&#34;text/html&#34;&#xA;    src=&#34;https://www.dailymotion.com/embed/video/x9264lq?autoplay=0&#34; width=&#34;100%&#34; height=&#34;100%&#34; allowfullscreen&#xA;    title=&#34;Dailymotion Video Player&#34; allow=&#34;autoplay; web-share&#34;&gt; &#xA;  &lt;/iframe&gt; &#xA;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;page-break&#34; role=&#34;separator&#34;&gt;&#xA;  &lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;You will need the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ffmpeg: &lt;a href=&#34;https://ffmpeg.org/&#34;&gt;https://ffmpeg.org/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Windows command prompt&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Create a script that use ffmpeg to join video files then save the script and grant it necessary execute permission (on Mac and Linux). Make sure ffmpeg is on executable path, usually the &lt;code&gt;$PATH&lt;/code&gt; or &lt;code&gt;%PATH%&lt;/code&gt; variable&lt;/p&gt;</description>
    </item>
    <item>
      <title>SOLID in Action: the Dependency Inversion Principle</title>
      <link>https://geraldnguyen.github.io/posts/2023/02/solid-dependency-inversion-principle/</link>
      <pubDate>Tue, 21 Feb 2023 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/02/solid-dependency-inversion-principle/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/02/solid-dependency-inversion-principle/0_Uv2de6h1frX8mT2N.jpg&#34;&#xA;    alt=&#34;Photo by ocd studio on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@ocd_studio?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;ocd studio&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;the-dependency-inversion-principle-dip&#34;&gt;The Dependency Inversion Principle (DIP)&lt;/h1&gt;&#xA;&lt;p&gt;Naive application of traditional software development methods (e.g. &lt;a href=&#34;https://en.wikipedia.org/wiki/SADT&#34;&gt;&lt;strong&gt;SADT&lt;/strong&gt;&lt;/a&gt; or Structured Analysis and Design Technique), in the past, often resulted in a type of relationship where high-level modules depended on lower implementation details. This form of relationship often leads to &lt;a href=&#34;https://web.archive.org/web/20110714224327/http://www.objectmentor.com/resources/articles/dip.pdf&#34;&gt;rigidity, fragility, and immobility&lt;/a&gt;. These are the symptoms of bad design according to &lt;a href=&#34;https://en.wikipedia.org/wiki/Robert_C._Martin&#34;&gt;Robert C. Martin&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Five Minimum Viable Interview Questions series — Updated 17 Feb 2023</title>
      <link>https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/</link>
      <pubDate>Fri, 17 Feb 2023 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://miro.medium.com/v2/resize:fit:700/0*qxJpBdXPqAG2Z7NJ&#34;&#xA;    alt=&#34;Photo by Wes Hicks on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@sickhews?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Wes Hicks&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;rationale&#34;&gt;Rationale&lt;/h1&gt;&#xA;&lt;p&gt;Let’s face it. A developer is expected to know A LOT these days.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/1_VoFu1hUShEKCl-14qtPoFQ.png&#34;&#xA;    alt=&#34;A typical job requirement (screenshot)&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;A typical job requirement (screenshot)&lt;/p&gt;</description>
    </item>
    <item>
      <title>SOLID in Action: the Interface Segregation Principle</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/solid-interface-segregation-principle/</link>
      <pubDate>Fri, 27 Jan 2023 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/solid-interface-segregation-principle/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/solid-interface-segregation-principle/0_2JS1H36QRQHFriO0.jpg&#34;&#xA;    alt=&#34;Photos by Eugen Str on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photos by &lt;a href=&#34;https://unsplash.com/@eugen1980?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Eugen Str&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/solid-interface-segregation-principle/0_MRP8w8sESbbxCOzU.jpg&#34;&#xA;    alt=&#34;Photos by Patrick on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photos by &lt;a href=&#34;https://unsplash.com/@pf91_photography?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Patrick&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;If you are going to build a house, a table, or a chair, what is your preferred option? The multiple tools on the first picture or one Swiss knife on the second?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kotlin, Spring Data, and MongoDB: Develop a “GET /comments” API endpoint</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/kotlin-spring-data-mongodb-develop-get-comments-api/</link>
      <pubDate>Tue, 17 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/kotlin-spring-data-mongodb-develop-get-comments-api/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/kotlin-spring-data-mongodb-develop-get-comments-api/0_-YMPGEafKe0F0T-m.webp&#34;&#xA;    alt=&#34;Photo by Pratiksha Mohanty on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@pratiksha_mohanty?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Pratiksha Mohanty&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;&lt;em&gt;TL;DR&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;The 4 flavors are:&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Retrieve ALL&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;— more details at step #4&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Filtering by exact matching&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;— more details at step #5&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Filtering by partial/substring matching&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;— more details at step #6&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;em&gt;Filtering by full-text search&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;— more details at step #7&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;em&gt;Sample codes:&lt;/em&gt; &lt;a href=&#34;https://github.com/geraldnguyen/kotlin-springdata-mongodb&#34;&gt;https://github.com/geraldnguyen/kotlin-springdata-mongodb&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shift Left Testing</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/shift-left-testing/</link>
      <pubDate>Mon, 16 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/shift-left-testing/</guid>
      <description>&lt;h1 id=&#34;what-is-shift-left-testing&#34;&gt;What is Shift Left Testing?&lt;/h1&gt;&#xA;&lt;p&gt;A picture is worth a thousand words. Here are how Shift Left differs from the traditional approach&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/shift-left-testing/0_z-QIZOi5uaw_l5Xq.webp&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/shift-left-testing/0_0KbXqZhmD2HPADgY.webp&#34;&#xA;    alt=&#34;Source: https://www.bmc.com/blogs/what-is-shift-left-shift-left-testing-explained&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Source: &lt;a href=&#34;https://www.bmc.com/blogs/what-is-shift-left-shift-left-testing-explained&#34;&gt;https://www.bmc.com/blogs/what-is-shift-left-shift-left-testing-explained&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;how-does-my-team-shift-left&#34;&gt;How does my team shift left?&lt;/h1&gt;&#xA;&lt;p&gt;We started with &lt;strong&gt;unit testing&lt;/strong&gt;, by developers, for their own codes. This is the easiest shift to implement, though it still takes time, effort, and patience to get it right. I recommend &lt;a href=&#34;https://pragprog.com/titles/utj2/pragmatic-unit-testing-in-java-8-with-junit/&#34;&gt;Pragmatic Unit Testing in Java 8 with JUnit&lt;/a&gt; if you want quickly level-up&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is a 2-Factor Authentication(2FA)?</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/what-is-2-factor-authentication-2fa/</link>
      <pubDate>Mon, 16 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/what-is-2-factor-authentication-2fa/</guid>
      <description>&lt;h1 id=&#34;the-wolf-the-kid-and-the-goat&#34;&gt;The Wolf, the Kid, and the Goat&lt;/h1&gt;&#xA;&lt;p&gt;You probably have heard of this popular fable before.&lt;/p&gt;&#xA;&lt;p&gt;Mother Goat in her wisdom had carefully &lt;em&gt;secured&lt;/em&gt; her house and her Kid before going out. She even reminded her Kid to check the &lt;em&gt;password&lt;/em&gt; before opening the door. Her password was good. It was &lt;em&gt;very long&lt;/em&gt; and contained &lt;em&gt;non-alphabets&lt;/em&gt; and &lt;em&gt;special characters.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;As fate had it, a Wolf was nearby, he &lt;em&gt;eavesdropped&lt;/em&gt; and learned of the mother’s password. He was so sure of filling his belly. He even &lt;em&gt;mimicked&lt;/em&gt; the way mother Goat softly said her password&lt;/p&gt;</description>
    </item>
    <item>
      <title>#STYOut or #STYSTAY — What is better for Indonesian Football?</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/styout-stystay-what-is-better-for-indonesian-football/</link>
      <pubDate>Thu, 12 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/styout-stystay-what-is-better-for-indonesian-football/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/styout-stystay-what-is-better-for-indonesian-football/1_UEaVZcIzkXkW0N44KUeW5A.webp&#34;&#xA;    alt=&#34;Source: https://zingnews.vn/&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Source: &lt;a href=&#34;https://zingnews.vn/&#34;&gt;https://zingnews.vn/&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The Garuda team lost 0–2 to the Golden Dragon team on Monday, thus failing to reach the AFF Mitsubishi Electric Cup’s final. For a team from a football-crazed Indonesia, the loss was heartbreaking for many.&lt;/p&gt;&#xA;&lt;p&gt;Some took to social media calling for the sacking of coach Shin Tae-Yong. The tag #STYOut has been trending among Indonesian fans. Some were calmer. They defended him. #STYSTAY has been trending as well. As of 11 Jan 2023, #STYSTAY appears to have an upper hand.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Five Minimum Viable Spring REST Interview Questions</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/5-minimum-viable-spring-rest-interview-questions/</link>
      <pubDate>Thu, 12 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/5-minimum-viable-spring-rest-interview-questions/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/5-minimum-viable-spring-rest-interview-questions/0_5kwKvgKkYWpxPDoz.webp&#34;&#xA;    alt=&#34;Photo by Christina @ wocintechchat.com on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@wocintechchat?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Christina @ wocintechchat.com&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;page-break&#34; role=&#34;separator&#34;&gt;&#xA;  &lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;This is part of my&lt;/em&gt; &lt;a href=&#34;https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/&#34;&gt;&lt;em&gt;Five Minimum Viable Interview Questions series&lt;/em&gt;&lt;/a&gt; &lt;em&gt;where I research and compile Five essential interview questions on each interview topic. All of these questions aim to assess real and practical skills expected at work&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SOLID in Action — the Liskov Substitution Principle</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/solid-liskov-substitution-principle/</link>
      <pubDate>Mon, 09 Jan 2023 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/solid-liskov-substitution-principle/</guid>
      <description>&lt;p&gt;Let us start with a question:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Can social media connections &lt;em&gt;substitute&lt;/em&gt; for real life friends and family?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Well, it depends on how we define &amp;ldquo;connection&amp;rdquo;. If we have it as below, then according to the Liskow Substitution Principle (LSP), the answer is No.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/solid-liskov-substitution-principle/1_IuKgDzlyhAKEuql9Yr7qGw.png&#34;&#xA;    alt=&#34;Connection classes&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Connection classes&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Before we go further into this example, let’s back it up a bit to study the official definition of LSP.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevOps: Divide and Conquer with Gitlab Parent-Child Pipeline</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/devops-divide-conquer-with-gitlab-parent-child-pipeline/</link>
      <pubDate>Mon, 09 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/devops-divide-conquer-with-gitlab-parent-child-pipeline/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/devops-divide-conquer-with-gitlab-parent-child-pipeline/1_J8FiO-W4H06JsKgA5rUuLQ.webp&#34;&#xA;    alt=&#34;Gitlab parent-child pipeline&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Gitlab parent-child pipeline&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;scenario&#34;&gt;Scenario&lt;/h1&gt;&#xA;&lt;p&gt;You are building a pipeline that helps your team reset test data in different non-prod environments such as Test and Sandbox.&lt;/p&gt;&#xA;&lt;p&gt;Under each environment, there are several application services or databases to clear. Let’s call them A, B, and C.&lt;/p&gt;&#xA;&lt;h1 id=&#34;trivial-approach&#34;&gt;Trivial Approach&lt;/h1&gt;&#xA;&lt;p&gt;You can create 3 separate jobs for each environment&lt;/p&gt;</description>
    </item>
    <item>
      <title>AFF Championship and the love for football that unites people</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/aff-championship-love-for-football/</link>
      <pubDate>Sat, 07 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/aff-championship-love-for-football/</guid>
      <description>&lt;p&gt;The biennial &lt;a href=&#34;https://www.affmitsubishielectriccup.com/2022/&#34;&gt;ASEAN Football Federation (AFF) Championship in 2022&lt;/a&gt; has started its first semi-final leg with a draw between Indonesia and Vietnam yesterday.&lt;/p&gt;&#xA;&lt;p&gt;It was a tense match with both teams unable to score in front of about 50,000 spectators in Gelora Bung Karno Stadium. That is a huge turnout in a country severely affected by the Covid pandemic just 2 years ago.&lt;/p&gt;&#xA;&lt;p&gt;They will meet again for the second leg on Monday at My Dinh stadium on Monday. Greeting the Indonesia team would be at least 30,000 home fans there.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Maven — 3 Free Resources for Beginner and Intermediate Java Developers</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/maven-3-free-resources-for-beginner-and-intermediate-java-developers/</link>
      <pubDate>Sat, 07 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/maven-3-free-resources-for-beginner-and-intermediate-java-developers/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/maven-3-free-resources-for-beginner-and-intermediate-java-developers/1_OP59b2RYiBgs_OK9PqAzMA.webp&#34;&#xA;    alt=&#34;Screenshot of a Maven POM file&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Screenshot of a Maven POM file&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Maven is the most popular build and dependency management system from the Apache Foundation.&lt;/p&gt;&#xA;&lt;p&gt;If you plan to develop serious applications in Java or if you have just started to, you have better pick up Maven. I have just the resources for you below to learn about it and move from Beginner to Intermediate in no time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Home Deity is Not Divine</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/the-home-deity-is-not-divine/</link>
      <pubDate>Sat, 07 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/the-home-deity-is-not-divine/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/the-home-deity-is-not-divine/0_p6mZOiETNEwZ1L6e.webp&#34;&#xA;    alt=&#34;Photo by Chinh Le Duc on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@mero_dnt?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Chinh Le Duc&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;The title is loosely translated from a Vietnamese idiom&lt;/p&gt;&#xA;&#xA;&#xA;&lt;blockquote class=&#34;medium-quote&#34;&gt;&#xA;  &lt;p&gt;&#xA;    &lt;strong&gt;Bụt chùa nhà không thiêng&lt;/strong&gt;&#xA;    &#xA;  &lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Literally translated, the idiom is about a Buddhist Saint &lt;em&gt;(Vietnamese:&lt;/em&gt; &lt;strong&gt;&lt;em&gt;bụt&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;)&lt;/em&gt; prayed to in a pagoda &lt;em&gt;(Vietnamese:&lt;/em&gt; &lt;strong&gt;&lt;em&gt;chùa&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;)&lt;/em&gt; close to or within the home (Vietnamese: &lt;strong&gt;nhà&lt;/strong&gt;) being non-divine &lt;em&gt;(Vietnamese:&lt;/em&gt; &lt;strong&gt;&lt;em&gt;không thiêng&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;)&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Work-hard Verifying or Work-smart Mocking</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/work-hard-verifying-or-work-smart-mocking/</link>
      <pubDate>Wed, 04 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/work-hard-verifying-or-work-smart-mocking/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/work-hard-verifying-or-work-smart-mocking/0_huB0so5ACBot2PYg.webp&#34;&#xA;    alt=&#34;Photo by Tim Gouw on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@punttim?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Tim Gouw&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Let’s test this service&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#3c5d5d;font-weight:bold&#34;&gt;@Service&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;SampleService&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;SampleRepository&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;sampleRepository;&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;SampleService&lt;/span&gt;(SampleRepository&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;sampleRepository)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#008080&#34;&gt;sampleRepository&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;sampleRepository;&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;SampleEntity&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;createSampleEntity&lt;/span&gt;()&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;SampleEntity&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;sampleEntity&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;SampleEntity();&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;sampleEntity.&lt;span style=&#34;color:#008080&#34;&gt;setName&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;sample&amp;#34;&lt;/span&gt;);&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;sampleRepository.&lt;span style=&#34;color:#008080&#34;&gt;save&lt;/span&gt;(sampleEntity);&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Writers, please go to sleep earlier</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/writers-please-go-to-sleep-earlier/</link>
      <pubDate>Mon, 02 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/writers-please-go-to-sleep-earlier/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/writers-please-go-to-sleep-earlier/0_tsmi4lcC93iHkhjB.webp&#34;&#xA;    alt=&#34;Photo by Brett Jordan on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@brett_jordan?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Brett Jordan&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;brace-yourselves-holidays-are-ending&#34;&gt;Brace yourselves. Holidays are ending&lt;/h1&gt;&#xA;&lt;p&gt;I am &lt;a href=&#34;https://geraldnguyen.github.io/posts/2022/12/from-programmer-to-writer/&#34;&gt;determined to become a writer&lt;/a&gt;. That does not mean forgoing my day job. Once back to work, I will be away from Medium for about 13 hours straights (8 AM to 9 PM). Writings only resume at night or during weekends.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Retry WebClient Request</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/retry-webclient-request/</link>
      <pubDate>Fri, 30 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/retry-webclient-request/</guid>
      <description>&lt;h1 id=&#34;problem-statement&#34;&gt;Problem Statement&lt;/h1&gt;&#xA;&lt;p&gt;Sometimes web request fails, for whatever reason, and you need to retry it&lt;/p&gt;&#xA;&lt;p&gt;Let’s simulate a failed request scenario in a unit test. In the below code, the &lt;code&gt;webClient&lt;/code&gt; attempts to submit a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/employee/100&lt;/code&gt; (stored in constant &lt;code&gt;PATH&lt;/code&gt;). We mocked the backend server to fail with common status codes such as &lt;code&gt;BAD_REQUEST&lt;/code&gt;, &lt;code&gt;UNAUTHORIZED&lt;/code&gt; and validate that the client throws &lt;code&gt;WebClientResponseException&lt;/code&gt; upon receiving such statuses.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Regional economic development in Vietnam — Reform &amp; “Reorder”</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/regional-economic-development-in-vietnam-reform-reorder/</link>
      <pubDate>Thu, 29 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/regional-economic-development-in-vietnam-reform-reorder/</guid>
      <description>&lt;p&gt;35 years of Đổi Mới (Economic Reform) helped Vietnam from a country that had to “run for rice” &lt;em&gt;(see note 1)&lt;/em&gt; in the early 1980s to become a middle-income country, reaching the top 20 of the world’s leading economies in terms of international trade. The Reform has turned many poor rural areas into industrial districts, farmers into city dwellers, the number of poor households has decreased sharply, the middle class has increased rapidly… But the Reform process also led to the “Reorder” among provinces and regions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The story of the drums in Singapore</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/the-story-of-the-drums-in-singapore/</link>
      <pubDate>Tue, 27 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/the-story-of-the-drums-in-singapore/</guid>
      <description>&lt;p&gt;Many times when I visited Singapore, I noticed that under each apartment building, there were 2–3 red-painted drums in a straight line. These drums are modified with ventilation holes, have high legs, and have discharge doors… so that when households need to burn votive paper, they can do it here.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/the-story-of-the-drums-in-singapore/0_ErJZacQ1ZKMdN4Rn.jpg&#34;&#xA;    alt=&#34;Incense burner (source: author’s father)&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Incense burner (source: author’s father)&lt;/p&gt;</description>
    </item>
    <item>
      <title>What Are APIs?</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/what-are-apis/</link>
      <pubDate>Tue, 27 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/what-are-apis/</guid>
      <description>&lt;h1 id=&#34;are-apis-the-waiters&#34;&gt;Are APIs the waiters?&lt;/h1&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/what-are-apis/0_u9-gya6X9E94NV5o.webp&#34;&#xA;    alt=&#34;Source: Reddit and LinkedIn&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Source: &lt;a href=&#34;https://www.reddit.com/r/ProgrammerHumor/comments/qq2m9g/explained_frontend_backend_apis/&#34;&gt;Reddit&lt;/a&gt; and LinkedIn&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;no--the-waiters-are-part-of-frontend&#34;&gt;No — The waiters are part of Frontend.&lt;/h1&gt;&#xA;&lt;p&gt;They are responsible for creating a nice visual and interactive experience such as greeting customers, arranging the tables, present the dishes — like what React or Angular codes do.&lt;/p&gt;</description>
    </item>
    <item>
      <title>From Programmer to Writer</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/from-programmer-to-writer/</link>
      <pubDate>Sun, 25 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/from-programmer-to-writer/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/from-programmer-to-writer/0_wR0Ncqo7d8oeuaiD.jpg&#34;&#xA;    alt=&#34;Photo by Glenn Carstens-Peters on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@glenncarstenspeters?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Glenn Carstens-Peters&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;I’m a programmer by trade and write codes for a living. Then 1 month ago, I decided to become a writer. Here are the reasons why I did it and how I do it.&lt;/p&gt;&#xA;&lt;h1 id=&#34;im-pursuing-my-hobby&#34;&gt;I’m pursuing my hobby&lt;/h1&gt;&#xA;&lt;p&gt;I never considered writing a hobby. I barely managed to pass my literature and English classes. I preferred subjects that did not require writing such as Mathematics, Chemistry, or Physics.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Singapore: City in a Garden</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/singapore-city-in-a-garden/</link>
      <pubDate>Sun, 25 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/singapore-city-in-a-garden/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/singapore-city-in-a-garden/0_iJLNpfR7xb2vY5dq.webp&#34;&#xA;    alt=&#34;Photo by Kirill Petropavlov on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@kp89_?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Kirill Petropavlov&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;What is worth learning from the Lion island nation is, first of all, the strategic vision of development and the solution to turn that vision into reality.&lt;/p&gt;&#xA;&lt;p&gt;The goal is to continuously improve people’s quality of life&lt;/p&gt;</description>
    </item>
    <item>
      <title>SOLID in Action — the Open-closed Principle</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/solid-open-close-principle/</link>
      <pubDate>Sat, 24 Dec 2022 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/solid-open-close-principle/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/solid-open-close-principle/0_eqhYFU2kNfQ0TrN9.jpg&#34;&#xA;    alt=&#34;Photo by Richard Balog on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@ricsard?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Richard Balog&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;In the physical world, a door closed is a closed door. In the software world, a closed entity may still be open for extension. And it should be so, according to the Open-closed principle (OCP).&lt;/p&gt;&#xA;&lt;p&gt;There are 2 popular ways to apply this principle. We are going to discuss them both.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simple Code — Effective UI — Month Picker</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/simple-code-effective-ui-month-picker/</link>
      <pubDate>Thu, 22 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/simple-code-effective-ui-month-picker/</guid>
      <description>&lt;h1 id=&#34;option-1-separate-month-and-year-dropdowns&#34;&gt;Option 1: separate Month and Year dropdowns&lt;/h1&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/simple-code-effective-ui-month-picker/1_QUOjPpvTDXEzv8HbvpJbNQ.png&#34;&#xA;    alt=&#34;Separate month and year dropdowns&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Separate month and year dropdowns&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;It may be verbose, but you have total control over their placements, label, and format&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;select&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;January&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;February&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;March&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;April&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;May&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;June&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;July&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;August&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;September&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;October&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;November&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;December&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;select&lt;/span&gt;&amp;gt; Month  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;select&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;2021&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;2022&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;2023&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;option&lt;/span&gt;&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#000080&#34;&gt;select&lt;/span&gt;&amp;gt; Year&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Thu Duc, Ho Chi Minh City, Vietnam in December</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/thu-duc-hcmc-vietnam/</link>
      <pubDate>Sun, 18 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/thu-duc-hcmc-vietnam/</guid>
      <description>&lt;p&gt;Taken during my vacation&lt;/p&gt;&#xA;&lt;p&gt;Photos taken during my vacation in Thu Duc, Ho Chi Minh City, Vietnam on December 2022&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/thu-duc-hcmc-vietnam/1_JSvnrmztXJaaQv2PphCiQQ.png&#34;&#xA;    alt=&#34;Vinhome Grandpark, Thu Duc, Ho Chi Minh City&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Vinhome Grandpark, Thu Duc, Ho Chi Minh City&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/thu-duc-hcmc-vietnam/1_eOcHJIuD6I6YkZQpedFOSA.png&#34;&#xA;    alt=&#34;Heavy rain&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Heavy rain&lt;/p&gt;</description>
    </item>
    <item>
      <title>SOLID in Action — the Single Responsibility Principle</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/solid-single-responsibility-principle/</link>
      <pubDate>Wed, 14 Dec 2022 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/solid-single-responsibility-principle/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/solid-single-responsibility-principle/0_AzgjytmEOFKBuWDZ.jpg&#34;&#xA;    alt=&#34;Photo by Robert Linder on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@rwlinder?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Robert Linder&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;We know the saying “Jack of all trades, master of none”. We dislike it when we are at the receiving end. We dislike it too when it is said to someone we love. That should extend to &lt;em&gt;things&lt;/em&gt; that we love too.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Five Minimum Viable Javascript Interview Questions</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/5-minimum-viable-javascript-interview-questions/</link>
      <pubDate>Fri, 09 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/5-minimum-viable-javascript-interview-questions/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of my&lt;/em&gt; &lt;a href=&#34;https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/&#34;&gt;&lt;em&gt;Five Minimum Viable Interview Questions series&lt;/em&gt;&lt;/a&gt; &lt;em&gt;where I research and compile Five essential interview questions on each interview topic. All of these questions aim to assess real and practical skills expected at work&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;page-break&#34; role=&#34;separator&#34;&gt;&#xA;  &lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;It is common nowadays for companies to hire for full-stack positions. A full-stack developer is typically expected to work on both frontend and backend development. That same expectation applies to interviews.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Becoming a SOLID developer</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/becoming-a-solid-developer/</link>
      <pubDate>Wed, 07 Dec 2022 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/becoming-a-solid-developer/</guid>
      <description>&lt;p&gt;Being called &lt;em&gt;solid&lt;/em&gt; is a compliment. The word carries the positive notions of reliability and respectability. All of us should aim to become one.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/becoming-a-solid-developer/1_jgPZbah9dkZgepyo6D2xwQ.webp&#34;&#xA;    alt=&#34;https://www.collinsdictionary.com/dictionary/english/solid (screenshot)&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;&lt;a href=&#34;https://www.collinsdictionary.com/dictionary/english/solid&#34;&gt;https://www.collinsdictionary.com/dictionary/english/solid&lt;/a&gt; (screenshot)&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;If you are a software engineer or want to become one, you are in luck because there is a set of SOLID principles to guide your way.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The best way to fix Hibernate’s MultipleBagFetchException</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/fixing-hibernate-multiplebagfetchexception/</link>
      <pubDate>Sun, 04 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/fixing-hibernate-multiplebagfetchexception/</guid>
      <description>&lt;p&gt;There are 2 articles from &lt;a href=&#34;https://vladmihalcea.com/hibernate-multiplebagfetchexception/&#34;&gt;https://vladmihalcea.com&lt;/a&gt; describing his analysis and solutions to Hibernate’s MultipleBagFetchException. The &lt;a href=&#34;https://vladmihalcea.com/hibernate-multiplebagfetchexception/&#34;&gt;first&lt;/a&gt; one, appeared around 2020 (when I first researched this problem) or even earlier (2018?), offered an analysis of the problem and a solution using Hibernate’s EntityManager API. The &lt;a href=&#34;https://vladmihalcea.com/spring-data-jpa-multiplebagfetchexception/&#34;&gt;second&lt;/a&gt; one appeared around Jun 2022, and offers a slightly different solution for JPA.&lt;/p&gt;&#xA;&lt;p&gt;I will present below my understanding of his analysis, his solutions, and working sample codes which you can check out and validate your understanding and/or devise your own solutions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Echo API</title>
      <link>https://geraldnguyen.github.io/posts/2022/11/echo-api/</link>
      <pubDate>Wed, 30 Nov 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/11/echo-api/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;The need for this library arose when I wanted assurance that my &lt;a href=&#34;https://www.npmjs.com/package/ngx-correlation-id&#34;&gt;HTTP client&lt;/a&gt; was sending correctly formulated HTTP messages.&lt;/p&gt;&#xA;&lt;p&gt;Another use of this &lt;code&gt;/echo&lt;/code&gt; API is to capture and debug the remote calls from another service. Imagine you are providing a webhook endpoint. Before you even build one, you first need to know what incoming messages look like. Supplying an &lt;code&gt;/echo&lt;/code&gt; API endpoint in the webhook’s registration allows you to capture and log all incoming messages&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit testing Java’s try-with-resource</title>
      <link>https://geraldnguyen.github.io/posts/2022/11/unit-testing-java-try-with-resource/</link>
      <pubDate>Tue, 29 Nov 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/11/unit-testing-java-try-with-resource/</guid>
      <description>&lt;p&gt;Java’s try-with-resource is a convenient syntactic shortcut. It frees developers from keeping track of closeable resources and closing in a &lt;code&gt;finally&lt;/code&gt; block&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/11/unit-testing-java-try-with-resource/1_6jiM4RwfZ3NKj_hUuFw3aQ.png&#34;&#xA;    alt=&#34;Unit testing try-with-resource&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Unit testing try-with-resource&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;&#xA;&lt;p&gt;Some of us may remember doing such boring and lengthy &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;finally&lt;/code&gt;-&lt;code&gt;if-not-null&lt;/code&gt;-&lt;code&gt;close()&lt;/code&gt; A LOT!&lt;/p&gt;&#xA;&lt;p&gt;On a typical day, we performed these steps a dozen times:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Method Reference</title>
      <link>https://geraldnguyen.github.io/posts/2022/11/java-method-reference/</link>
      <pubDate>Sun, 27 Nov 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/11/java-method-reference/</guid>
      <description>&lt;p&gt;I first learned method reference from C#, so the Java concept is familiar to me. Or that’s what I thought until I picked up the &lt;a href=&#34;https://www.oreilly.com/library/view/modern-java-recipes/9781491973165/&#34;&gt;Modern Java Recipes book&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In this article, we’ll explore 3 forms of method references in Java&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;object::instanceMethod&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Class::staticMethod&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Class::instanceMethod&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The last one is a bit more special, as we shall examine in detail&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/11/java-method-reference/1_ypHleI7FEQsx3ZrsTQBvlQ.png&#34;&#xA;    alt=&#34;Source: author&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Source: author&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code Review as an interview tool</title>
      <link>https://geraldnguyen.github.io/posts/2022/11/code-review-as-an-interview-tool/</link>
      <pubDate>Tue, 22 Nov 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/11/code-review-as-an-interview-tool/</guid>
      <description>&lt;h2 id=&#34;rationale&#34;&gt;Rationale&lt;/h2&gt;&#xA;&lt;p&gt;In all software development teams that I have been part of, we always value and encourage everyone to participate in code reviews. We see it as an effective way of learning and contributing. It has an important place in my Engineering practice.&lt;/p&gt;&#xA;&lt;p&gt;We learn when we review other people’s codes. That’s actually an effective way of keeping up-to-date with what is happening to the code base, what sort of problems our colleagues are trying to solve, and what techniques they employed to solve them. Whether you are young or experienced, the delightful feeling of seeing creative solutions during code reviews is the same.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Stream Interview Tests - takeWhile</title>
      <link>https://geraldnguyen.github.io/posts/2021/11/java-stream-interview-tests-takewhile/</link>
      <pubDate>Mon, 01 Nov 2021 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2021/11/java-stream-interview-tests-takewhile/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2021/11/java-stream-interview-tests-takewhile/1_QnzX3SLxc1y3ALxkg6Rwyw.png&#34;&#xA;    alt=&#34;Generated by Dall-e&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Generated by &lt;a href=&#34;https://labs.openai.com/s/wxXrNGBn2waq9Un2LZxXNeGv&#34;&gt;Dall-e&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;why-java-stream&#34;&gt;Why Java Stream?&lt;/h1&gt;&#xA;&lt;p&gt;Since its introduction in Java 8, Stream has become more and more the preferred way of processing collection. But some of its APIs, are complicated and hard to understand, especially those of &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collector.html&#34;&gt;Collector&lt;/a&gt; and those for &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#reduce-U-java.util.function.BiFunction-java.util.function.BinaryOperator-&#34;&gt;reduction&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Stream Interview Tests - Distinct Characters</title>
      <link>https://geraldnguyen.github.io/posts/2021/10/java-stream-interview-tests-distinct-characters/</link>
      <pubDate>Sat, 30 Oct 2021 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2021/10/java-stream-interview-tests-distinct-characters/</guid>
      <description>&lt;h1 id=&#34;requirement&#34;&gt;Requirement&lt;/h1&gt;&#xA;&lt;p&gt;Given a sentence comprising of one or multiple words separated by space (e.g. &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;Hello World&lt;/code&gt;, &lt;code&gt;aadsbbaba&lt;/code&gt;), return a sorted list of distinct characters excluding space&lt;/p&gt;&#xA;&lt;p&gt;Solve this problem using Java Stream&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Hint&lt;/strong&gt;: Use &lt;code&gt;String.split(“”)&lt;/code&gt;to split a string into a &lt;code&gt;String[]&lt;/code&gt;, then use &lt;code&gt;String.charAt(0)&lt;/code&gt; to convert each single-char string to &lt;code&gt;char&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;discussion&#34;&gt;Discussion&lt;/h1&gt;&#xA;&lt;p&gt;This problem tests candidate’s knowledge of the following &lt;code&gt;Stream&lt;/code&gt; methods:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Stream.of(...)&lt;/code&gt; or &lt;code&gt;Array.stream(...)&lt;/code&gt; to convert an array of single-char string (e.g. from &lt;code&gt;str.split(&amp;quot;&amp;quot;)&lt;/code&gt;) to &lt;code&gt;Stream&amp;lt;String&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;map(str -&amp;gt; str.charAt(0))&lt;/code&gt; to convert &lt;code&gt;String&lt;/code&gt; to &lt;code&gt;Character&lt;/code&gt;. &lt;strong&gt;Note&lt;/strong&gt;: while &lt;code&gt;String.toCharArray&lt;/code&gt; can readily convert a &lt;code&gt;String&lt;/code&gt; to an &lt;code&gt;char[]&lt;/code&gt;, turning the resulting array to a &lt;code&gt;Character&lt;/code&gt; stream isn&amp;rsquo;t straightforward due to lack of built-in support for &lt;code&gt;char&lt;/code&gt; type in Stream and Collection API. The &lt;code&gt;Arrays.asList(str.toCharArray()&lt;/code&gt; or &lt;code&gt;List.of(...)&lt;/code&gt; results in a &lt;code&gt;List&amp;lt;char[]&amp;gt;&lt;/code&gt; instead&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;distinct()&lt;/code&gt; to keep only 1 instance of each encountered character&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;sorted()&lt;/code&gt; to sort the encountered characters in their natural order&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;collect(Collectors.toList())&lt;/code&gt; to collect stream elements into a list&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;sample-solution&#34;&gt;Sample Solution&lt;/h1&gt;&#xA;&lt;p&gt;A sample solution is shown below. In addition to above operations, we only utilize an extra &lt;code&gt;filter(...)&lt;/code&gt; operation to discard spaces from getting into our response&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring REST API Interview Questions</title>
      <link>https://geraldnguyen.github.io/posts/2021/10/spring-rest-api-interview-questions/</link>
      <pubDate>Tue, 19 Oct 2021 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2021/10/spring-rest-api-interview-questions/</guid>
      <description>&lt;h2 id=&#34;1-complete-the-rest-controller&#34;&gt;#1 Complete the REST controller&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Objective&lt;/strong&gt;: Assess a candidate’s practical experience and knowledge&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Instructions&lt;/strong&gt;: Given the below controller, fill in Spring annotations according to instructions given in the code comments&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Pay attention to&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Did the candidate notice the repetition of &lt;code&gt;/friends&lt;/code&gt; prefix? Did he/she suggest a &lt;code&gt;@RequestMapping(/friends)&lt;/code&gt; on the controller class instead?&lt;/li&gt;&#xA;&lt;li&gt;How did he/she annotate the &lt;em&gt;optional&lt;/em&gt; parameter &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; in &lt;code&gt;findFriends(String name, Long id)&lt;/code&gt; method?&lt;/li&gt;&#xA;&lt;li&gt;What annotation can be used to force a 204 (no content) response?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;/* Assume all package, imports and dependency classes are available */&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt; * A rest controller for Friend-related operations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt; */&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;FriendController&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;FriendService&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendService;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;FriendController&lt;/span&gt;(FriendService&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendService)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#008080&#34;&gt;friendService&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendService;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * Response to GET /friends/ request&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @param name (optional) filter by name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @param id (optional) filter by id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @return a list of friends&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     */&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;List&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;FriendDTO&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;findFriends&lt;/span&gt;(String&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;name,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;Long&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;id)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(id&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;null&lt;/span&gt;)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendService.&lt;span style=&#34;color:#008080&#34;&gt;findByFriendId&lt;/span&gt;(id);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;(StringUtils.&lt;span style=&#34;color:#008080&#34;&gt;hasText&lt;/span&gt;(name))&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendService.&lt;span style=&#34;color:#008080&#34;&gt;findByName&lt;/span&gt;(name);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendService.&lt;span style=&#34;color:#008080&#34;&gt;findAll&lt;/span&gt;();&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * Response to GET /friends/hello/{friend&amp;#39;s name} request&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @param friend a friend&amp;#39;s name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @return a friendly Hello&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     */&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;String&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;hello&lt;/span&gt;(String&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friend)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;String.&lt;span style=&#34;color:#008080&#34;&gt;format&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Hello %s&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friend);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * Response to POST /friends/hello/{friend&amp;#39;s name} request&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @param friend a friend&amp;#39;s name which is to be saved&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @return a friendly Hello together with Id of the new friend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     */&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;String&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;helloAndSave&lt;/span&gt;(String&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friend)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;FriendDTO&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;dto&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendService.&lt;span style=&#34;color:#008080&#34;&gt;add&lt;/span&gt;(FriendDTO.&lt;span style=&#34;color:#008080&#34;&gt;builder&lt;/span&gt;().&lt;span style=&#34;color:#008080&#34;&gt;name&lt;/span&gt;(friend).&lt;span style=&#34;color:#008080&#34;&gt;createDt&lt;/span&gt;(LocalDateTime.&lt;span style=&#34;color:#008080&#34;&gt;now&lt;/span&gt;()).&lt;span style=&#34;color:#008080&#34;&gt;build&lt;/span&gt;());&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;String.&lt;span style=&#34;color:#008080&#34;&gt;format&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;%s. Your Id is %d&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;hello(friend),&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;dto.&lt;span style=&#34;color:#008080&#34;&gt;getId&lt;/span&gt;());&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * Un-friend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * Response to DELETE /friends/{friend&amp;#39;s id} request, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * return 204 if successful&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @param friendId the id of the friend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     */&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;deleteFriend&lt;/span&gt;(&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendId)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;friendService.&lt;span style=&#34;color:#008080&#34;&gt;removeFriend&lt;/span&gt;(friendId);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * Update friend name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * Response to &amp;lt;METHOD?&amp;gt; /friends/{friend&amp;#39;s id}/{new name} request, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * return update friend info&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @param friendId the id of the friend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @param newName the new name of the friend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     * @return updated friend&amp;#39;s info&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;     */&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;FriendDTO&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;updateFriend&lt;/span&gt;(&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;long&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendId,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;String&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;newName)&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;{&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;friendService.&lt;span style=&#34;color:#008080&#34;&gt;updateName&lt;/span&gt;(friendId,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;newName);&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;}&lt;span style=&#34;color:#bbb&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Enable Comment in Hugo site</title>
      <link>https://geraldnguyen.github.io/posts/2021/10/2021-10-17-enable-commenting/</link>
      <pubDate>Sun, 17 Oct 2021 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2021/10/2021-10-17-enable-commenting/</guid>
      <description>&lt;p&gt;&lt;em&gt;Note 2024-08-15: An earlier version of this site ran on &lt;a href=&#34;https://getdoks.org/&#34;&gt;doks&lt;/a&gt;. I&amp;rsquo;m in the middle of updating it to a medium-like theme&lt;/em&gt;*&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;You may have noticed that this website is using a powerful-yet-easy-to-use &lt;a href=&#34;https://getdoks.org/&#34;&gt;doks&lt;/a&gt; theme.&lt;/p&gt;&#xA;&lt;p&gt;As I wanted to have more interaction with my readers, enabling comment is a first step.&lt;/p&gt;&#xA;&lt;h2 id=&#34;enable-comment-in-hugo&#34;&gt;Enable Comment in Hugo&lt;/h2&gt;&#xA;&lt;p&gt;Hugo provides built-in support for Disqus. It ships with a &lt;code&gt;_internal/disqus.html&lt;/code&gt; template that we can simply copy &amp;amp; paste to wherever we want comment to appear. The steps are simple:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes Memory Units</title>
      <link>https://geraldnguyen.github.io/posts/2020/09/2020-09-13-kubernetes-memory-unit/</link>
      <pubDate>Sun, 13 Sep 2020 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2020/09/2020-09-13-kubernetes-memory-unit/</guid>
      <description>&lt;p&gt;Default memory unit in Kubernetes is bytes, in addition to other shorter forms with one of supported suffixes: E, P, T, G, M, K, Ei, Pi, Ti, Gi, Mi, Ki.&lt;/p&gt;&#xA;&lt;p&gt;For example: &lt;code&gt;128974848, 129e6, 129M , 123Mi&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Have you ever wondered what do those suffixes mean?&lt;/p&gt;&#xA;&lt;p&gt;A popular reference is &lt;a href=&#34;https://medium.com/@betz.mark/understanding-resource-limits-in-kubernetes-memory-6b41e9a955f9&#34;&gt;https://medium.com/@betz.mark/understanding-resource-limits-in-kubernetes-memory-6b41e9a955f9&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;But the root definition is at &lt;a href=&#34;https://en.wikipedia.org/wiki/Binary_prefix&#34;&gt;https://en.wikipedia.org/wiki/Binary_prefix&lt;/a&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>javax.transaction.Transactional vs org.springframework.transaction.annotation.Transactional</title>
      <link>https://geraldnguyen.github.io/posts/2020/09/2020-09-10-transactional-annotation/</link>
      <pubDate>Thu, 10 Sep 2020 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2020/09/2020-09-10-transactional-annotation/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;If you’re using Spring or Spring Boot, then use the Spring @Transactional annotation, as it allows you to configure more attributes than the Java EE @Transactional annotation.&lt;/p&gt;&#xA;&lt;p&gt;If you are using Java EE alone, and you deploy your application on a Java EE application server, then use the Java EE @Transactional annotation.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/a/62702146/575457&#34;&gt;https://stackoverflow.com/a/62702146/575457&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Bootstrap with React</title>
      <link>https://geraldnguyen.github.io/posts/2020/04/2020-04-20-using-bootstrap-with-react/</link>
      <pubDate>Mon, 20 Apr 2020 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2020/04/2020-04-20-using-bootstrap-with-react/</guid>
      <description>&lt;h2 id=&#34;mixing-browser-and-react&#34;&gt;Mixing browser and React&lt;/h2&gt;&#xA;&lt;p&gt;Insert links to Bootstrap&amp;rsquo;s javascript and CSS and its dependencies in app&amp;rsquo;s &lt;code&gt;index.html&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;head&amp;gt;&#xA;  &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css&amp;#34; integrity=&amp;#34;sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&#xA;&amp;lt;body&amp;gt;&#xA;&#xA;  &amp;lt;!-- other content --&amp;gt;&#xA;  &#xA;  &amp;lt;script src=&amp;#34;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js&amp;#34; integrity=&amp;#34;sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&#xA;  &amp;lt;script src=&amp;#34;https://code.jquery.com/jquery-3.4.1.slim.min.js&amp;#34; integrity=&amp;#34;sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js&amp;#34; integrity=&amp;#34;sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;/body&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Invoke appropriate method via &lt;code&gt;window.$&lt;/code&gt; jQuery object&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.$(&amp;#39;#about-modal&amp;#39;).modal()&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>[Excel] Bulk Linking Cells to Sheets Whose Name Equates Cell&#39;s value</title>
      <link>https://geraldnguyen.github.io/posts/2013/12/2013-12-30-bulk-linking-cell-to-sheets/</link>
      <pubDate>Tue, 10 Sep 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/12/2013-12-30-bulk-linking-cell-to-sheets/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Sub CreateLinkToSheet()&#xA;    Dim c As Range&#xA;    For Each c In Selection&#xA;        &amp;#39; MsgBox c.Value&#xA;        ActiveSheet.Hyperlinks.Add Anchor:=c, Address:=&amp;#34;&amp;#34;, _&#xA;        SubAddress:=c.Value &amp;amp; &amp;#34;!A1&amp;#34;, TextToDisplay:=c.Value&#xA;    Next c&#xA;End Sub&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;How to run&lt;/strong&gt;: Select the cells to create link and run the macro&lt;/p&gt;</description>
    </item>
    <item>
      <title>What Happened When You Assigned State to a Stateless Session Bean?</title>
      <link>https://geraldnguyen.github.io/posts/2013/09/2013-09-10-what-happened-when-assign-state-to-stateless-session-bean/</link>
      <pubDate>Tue, 10 Sep 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/09/2013-09-10-what-happened-when-assign-state-to-stateless-session-bean/</guid>
      <description>&lt;p&gt;Here’s a scenario that illustrate above possibility&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    T1                   |     T2&#xA;1) setupState [A]        |                   &amp;lt;- store state as a variable&#xA;                         |                      in bean instance [A]&#xA;                         | 2) setupState [A] &amp;lt;- [A] is free, so the container&#xA;                         |                      allocate it to serve T2 request&#xA;                         |&#xA;3) someLongRunMethod [A] | 3&amp;#39;) aMethod [B]   &amp;lt;- Because A is busy with T1, &#xA;                                                another instance (B) is created &#xA;                                                to serve T2 request. If aMethod &#xA;                                                depends on previously setup state&#xA;                                                it will encounter error&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>[VBA] Save Attachements from Multiple Emails</title>
      <link>https://geraldnguyen.github.io/posts/2013/09/2013-09-02-save-attachments-from-multiple-emails/</link>
      <pubDate>Mon, 02 Sep 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/09/2013-09-02-save-attachments-from-multiple-emails/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Prerequisite&lt;/strong&gt;: Enable Developer tab, macro security and create “C:\mailattachment\” folder if not exists&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Instruction&lt;/strong&gt;: Select emails which have attachment to save (e.g. email containing daily report), select Developer, Macro, SaveAttachment&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Sub SaveAttachment()&#xA;    Dim myOlapp As Outlook.Application&#xA;    Dim myNameSpace As Outlook.NameSpace&#xA;    Dim myFolder As Outlook.MAPIFolder&#xA;    Dim myItem As Outlook.MailItem&#xA;    Dim myAttachment As Outlook.Attachment&#xA;    Dim I As Long&#xA;      &#xA;    Set myOlapp = CreateObject(&amp;#34;Outlook.Application&amp;#34;)&#xA;    &amp;#39;Set myNameSpace = myOlapp.GetNamespace(&amp;#34;MAPI&amp;#34;)&#xA;    &amp;#39;Set myFolder = myNameSpace.GetDefaultFolder(olFolderInbox)&#xA;    &amp;#39;Set myFolder = myFolder.Folders(&amp;#34;Ethsys&amp;#34;)&#xA;    &amp;#39;Set myFolder = myFolder.Folders(&amp;#34;Ethsys Operation Alert&amp;#34;)&#xA;      &#xA;    &amp;#39;For Each myItem In myFolder.Items&#xA;        &amp;#39;If myItem.Attachments.Count &amp;lt;&amp;gt; 0 Then&#xA;            &amp;#39;For Each myAttachment In myItem.Attachments&#xA;                &amp;#39;MsgBox myAttachment.FileName&#xA;            &amp;#39;Next&#xA;        &amp;#39;End If&#xA;    &amp;#39;Next&#xA;     &#xA;     &#xA;    For Each myItem In Application.ActiveExplorer.Selection&#xA;        If myItem.Attachments.Count &amp;lt;&amp;gt; 0 Then&#xA;            For Each myAttachment In myItem.Attachments&#xA;                &amp;#39;MsgBox myAttachment.FileName&#xA;                myAttachment.SaveAsFile (&amp;#34;C:\mailattachment\&amp;#34; &amp;amp; myAttachment.DisplayName)&#xA;            Next&#xA;        End If&#xA;    Next&#xA;     &#xA;End Sub&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>[Unix] – Recursively Listing Files Under a Directory</title>
      <link>https://geraldnguyen.github.io/posts/2013/07/2013-07-22-unix-recursively-listing-files/</link>
      <pubDate>Mon, 22 Jul 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/07/2013-07-22-unix-recursively-listing-files/</guid>
      <description>&lt;p&gt;If you prefer a DIY script:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#! /bin/bash&#xA; &#xA; &#xA;function list {&#xA;        if [ -z $1 ]&#xA;        then&#xA;                echo list starting_dir [exclude_file_or_folder] [action_on_file]&#xA;                exit 1&#xA;        elif [ &amp;#34;$1&amp;#34; == &amp;#34;-help&amp;#34; ]&#xA;        then&#xA;                echo list starting_dir [exclude_file_or_folder] [action_on_file]&#xA;                echo [exclude_file_or_folder]: use string that works with egrep e.g. &amp;#34;.jar|.log|.bak .jar|.log|.bak&amp;#34;&#xA;                echo [action_on_file]: if specified, output listing will not be in ls -l format&#xA;                exit 0&#xA;        fi&#xA; &#xA;        local path=$1&#xA; &#xA;        if [ -z $2 ]&#xA;        then&#xA;                ls -al $path&#xA;        else&#xA;                ls -al $path | egrep -v $2&#xA;        fi&#xA; &#xA;        for file in `ls -a $path`&#xA;        do&#xA;                if [ &amp;#34;$file&amp;#34; != &amp;#34;.&amp;#34; ] &amp;amp;&amp;amp; [ &amp;#34;$file&amp;#34; != &amp;#34;..&amp;#34; ] &amp;amp;&amp;amp; [ -d &amp;#34;$path/$file&amp;#34; ]&#xA;                then&#xA;                        file=`echo $file|grep -v $2`&#xA;                        if [ -z $file ]&#xA;                        then&#xA;                                echo &amp;#34;skipped&amp;#34; &amp;gt;&amp;gt; /dev/null&#xA;                        else&#xA;                                echo ============= $path/$file ================&#xA;                                list $path/$file $2 $3&#xA;                        fi&#xA;                fi&#xA;        done&#xA;}&#xA; &#xA; &#xA;list $1 $2 $3&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>[Database] Exists or Inner Join: Duplicate Records</title>
      <link>https://geraldnguyen.github.io/posts/2013/06/2013-06-16-database-exist-or-inner-join-duplicate-transactions/</link>
      <pubDate>Sun, 16 Jun 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/06/2013-06-16-database-exist-or-inner-join-duplicate-transactions/</guid>
      <description>&lt;h2 id=&#34;inner-join-vs-exists&#34;&gt;INNER JOIN vs. EXISTS&lt;/h2&gt;&#xA;&lt;p&gt;Often, EXISTS and INNER JOIN can be used interchangeably to query data with existence in 2 or more tables. However, it is not always the case. There is an important inherent characteristics of INNER JOIN that every developer should keep in mind: INNER JOIN result may contain DUPLICATE data record. This is important for uniqueness-sensitive handling of query result (e.g. record count), or when migrating database table with unique constraints.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Which Form of String Comparison Is Supported</title>
      <link>https://geraldnguyen.github.io/posts/2013/05/2013-05-21-which-form-of-string-comparison-is-supported/</link>
      <pubDate>Tue, 21 May 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/05/2013-05-21-which-form-of-string-comparison-is-supported/</guid>
      <description>&lt;p&gt;Below example is for Oracle DB, but adopting for other DBMS e.g. Sybase, MS SQL… should be straightforward.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;select ‘both no space’ as “String comparison in Oracle” from dual where ‘a’ = ‘a’&#xA;--&#xA;union&#xA;select ‘right has single trailing space’ from dual where ‘a’ = ‘a ‘&#xA;union&#xA;select ‘right has multiple trailing space’ from dual where ‘a’ = ‘a   ‘&#xA;union&#xA;select ‘right has single leading space’ from dual where ‘a’ = ‘ a’&#xA;union&#xA;select ‘right has multiple leading space’ from dual where ‘a’ = ‘    a’&#xA;--&#xA;union&#xA;select ‘left has single trailing space’ from dual where ‘a ‘ = ‘a’&#xA;union&#xA;select ‘left has multiple trailing space’ from dual where ‘a   ‘ = ‘a’&#xA;union&#xA;select ‘left has single leading space’ from dual where ‘ a’ = ‘a’&#xA;union&#xA;select ‘left has multiple leading space’ from dual where ‘    a’ = ‘a’&#xA;--&#xA;union&#xA;select ‘right has single leading and trailing space’ from dual where ‘a’ = ‘ a ‘&#xA;union&#xA;select ‘right has multiple leading and trailing space’ from dual where ‘a’ = ‘    a   ‘&#xA;union&#xA;select ‘left has single leading and trailing space’ from dual where ‘ a ‘ = ‘a’&#xA;union&#xA;select ‘left has multiple leading and trailing space’ from dual where ‘   a      ‘ = ‘a’&#xA;—-&#xA;union&#xA;select ‘both has leading and trailing space but leading space are different’ from dual where ‘ a ‘ = ‘  a ‘&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Myths of Secure Web Browsing</title>
      <link>https://geraldnguyen.github.io/posts/2013/05/2013-05-18-myths-of-secure-web-browsing/</link>
      <pubDate>Sat, 18 May 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/05/2013-05-18-myths-of-secure-web-browsing/</guid>
      <description>&lt;h2 id=&#34;1-i-am-safe-because-i-never-visited-porn-website&#34;&gt;1. I am safe because I never visited porn website&lt;/h2&gt;&#xA;&lt;p&gt;Wrong. Nowadays, many more malware infection are linked to visit to legitimate and popular websites than porn or counterfeit sites.&lt;/p&gt;&#xA;&lt;p&gt;According to Cisco 2013 Annual Security Report, Business/Industry site category stands at 3rd position behind advertising and dynamic content categories in the top 20 dangerous website categories. Included are Shopping (8th), Travel (9th), News (13th). Porn or counterfeit products (e.g. cheap Viagra) didn’t make it to top 20.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JSR 303 – Bean Validation – Let Your Bean Validate Itself</title>
      <link>https://geraldnguyen.github.io/posts/2012/12/2012-12-20-jsr303-bean-validation-self-validating-bean/</link>
      <pubDate>Thu, 20 Dec 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/12/2012-12-20-jsr303-bean-validation-self-validating-bean/</guid>
      <description>&lt;p&gt;This is a simple application of my &lt;a href=&#34;https://geraldnguyen.github.io/posts/2012/08/2012-08-25-jsr303-bean-validation-custom-constraints/&#34;&gt;previous post&lt;/a&gt; whereby you can develop your own validation rule and enforcer.&lt;/p&gt;&#xA;&lt;p&gt;The significance of this application is the use of &lt;code&gt;SelfValidate&lt;/code&gt; interface to enable bean to define its own validation method and validator to invoke bean’s method. Typically this constraint is apply to a type, but application on field is also possible.&lt;/p&gt;&#xA;&lt;h2 id=&#34;constraint-annotation&#34;&gt;Constraint Annotation&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@Target({ElementType.TYPE})&#xA;@Retention(RetentionPolicy.RUNTIME)&#xA;@Constraint(validatedBy=SelfValidator.class)&#xA; &#xA;public @interface SelfValidation {&#xA;   String message() default &amp;#34;Self-validation failed&amp;#34;;&#xA;   Class[] groups() default {};&#xA;   Class&amp;lt;? extends Payload&amp;gt;[] payload() default {};&#xA;}&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>JDBC Transaction Without EJB</title>
      <link>https://geraldnguyen.github.io/posts/2012/10/2012-10-24-jdbc-transaction-without-ejb/</link>
      <pubDate>Wed, 24 Oct 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/10/2012-10-24-jdbc-transaction-without-ejb/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Create a DAO method in which you set JDBC connection’s auto-commit property to false&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dbConn.setAutoCommit(false);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Execute all your queries&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;stmt = dbConn.createStatement();&#xA;&#xA;result = stmt.executeQuery(query);&#xA;&#xA;stmt.executeUpdate(update);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Commit or rollback the transaction&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dbConn.commit();&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;Reset auto-commit to true again for other execution&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dbConn.setAutoCommit(true);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is really simple, as it should be for something purely mechanical. The challenge for every programmer is how to write your transaction code or order your queries such that you can achieve desired result.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JSR 303 – Bean Validation – Custom Constraints</title>
      <link>https://geraldnguyen.github.io/posts/2012/08/2012-08-25-jsr303-bean-validation-custom-constraints/</link>
      <pubDate>Sat, 25 Aug 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/08/2012-08-25-jsr303-bean-validation-custom-constraints/</guid>
      <description>&lt;p&gt;So far, we have learn the &lt;a href=&#34;https://geraldnguyen.github.io/posts/2012/08/2012-08-03-jsr303-bean-validation-basic/&#34;&gt;basic&lt;/a&gt; and a not-so-common &lt;a href=&#34;https://geraldnguyen.github.io/posts/2012/08/2012-08-09-jsr303-bean-validation-nested-validation/&#34;&gt;nested usage&lt;/a&gt; of JSR 303 Bean Validation, it’s time to learn how the declarative validation rule was implemented. In another word, we will learn to create a custom constraint this this post.&lt;/p&gt;&#xA;&lt;h2 id=&#34;constraint-annotation&#34;&gt;Constraint Annotation&lt;/h2&gt;&#xA;&lt;p&gt;Custom constraint is a special kind of annotation that is itself annotated with &lt;code&gt;@javax.validation.Constraint&lt;/code&gt; annotation. For example:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@Target({ElementType.FIELD})&#xA;@Retention(RetentionPolicy.RUNTIME)&#xA;@Constraint(validatedBy=CustomeValidator.class) &#xA;public @interface CustomConstraint {&#xA;   String message() default &amp;#34;Custom validation failed&amp;#34;;&#xA;   Class[] groups() default {};&#xA;   Class&amp;lt;? extends Payload&amp;gt;[] payload() default {};&#xA;}&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>JSR 303 – Bean Validation – Nested Validation</title>
      <link>https://geraldnguyen.github.io/posts/2012/08/2012-08-09-jsr303-bean-validation-nested-validation/</link>
      <pubDate>Thu, 09 Aug 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/08/2012-08-09-jsr303-bean-validation-nested-validation/</guid>
      <description>&lt;p&gt;Following up from my &lt;a href=&#34;https://geraldnguyen.github.io/posts/2012/08/2012-08-03-jsr303-bean-validation-basic/&#34;&gt;previous post&lt;/a&gt; about JSR 303 – Bean Validation, we will see how to apply it to any nested property and how to display validation error on screen using Spring MVC’s JSP tags&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-bean-validation-on-nested-property&#34;&gt;1. Bean Validation on Nested Property&lt;/h2&gt;&#xA;&lt;p&gt;Recall that to validate any property, we only need to put a &lt;em&gt;Constraint&lt;/em&gt; annotation on top of its declaration. Example of common constraints are &lt;code&gt;@NotEmpty&lt;/code&gt;, &lt;code&gt;@Pattern&lt;/code&gt;, &lt;code&gt;@Email&lt;/code&gt;. One thing in common of these constraints are that the applied property has to be of type &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JSR 303 – Bean Validation – Basic</title>
      <link>https://geraldnguyen.github.io/posts/2012/08/2012-08-03-jsr303-bean-validation-basic/</link>
      <pubDate>Fri, 03 Aug 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/08/2012-08-03-jsr303-bean-validation-basic/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://jcp.org/en/jsr/detail?id=303&#34;&gt;JSR 303 – Bean Validation&lt;/a&gt; is defines a metadata model and API for JavaBean validation. The metadata is primarily in Annotation forms, with the possibility of being overridden or extended by XML descriptors. &lt;a href=&#34;http://www.hibernate.org/subprojects/validator.html&#34;&gt;Hibernate Validator&lt;/a&gt; is the reference implementation of JSR 303.&lt;/p&gt;&#xA;&lt;p&gt;The current version, as of August 2nd, 2012, of JSR303 is 1.0, and of  Hibernate Validator version is 4.0.1.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-example&#34;&gt;1. Example&lt;/h2&gt;&#xA;&lt;p&gt;A straightforward use of Bean Validation is to document and specify validation rules on JavaBean’s properties. In the below example, it is easy to deduce that field &lt;em&gt;manufacturer&lt;/em&gt;, &lt;em&gt;licensePlate&lt;/em&gt; and &lt;em&gt;seatCount&lt;/em&gt; are mandatory while &lt;em&gt;note&lt;/em&gt; is not. In addition, &lt;em&gt;licencePlate&lt;/em&gt; must contain at least 2 and at most 14 characters; &lt;em&gt;seatCount&lt;/em&gt; must be equal or higher than 2.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ILLEGAL SPORT BETTING DURING EURO CUP</title>
      <link>https://geraldnguyen.github.io/posts/2012/07/2012-07-10-illegal-sport-bettings-during-euro-cup/</link>
      <pubDate>Tue, 10 Jul 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/07/2012-07-10-illegal-sport-bettings-during-euro-cup/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://huynt.files.wordpress.com/2012/07/ttc_illegal_sport_betting_in_vn.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SPRING MVC – SESSIONATTRIBUTES ANNOTATION</title>
      <link>https://geraldnguyen.github.io/posts/2012/06/2012-06-30-spring-mvc-sessionattributes-annotation/</link>
      <pubDate>Sat, 30 Jun 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/06/2012-06-30-spring-mvc-sessionattributes-annotation/</guid>
      <description>&lt;p&gt;Spring MVC’s &lt;a href=&#34;http://static.springsource.org/spring/docs/3.1.x/javadoc-api/org/springframework/web/bind/annotation/SessionAttributes.html&#34;&gt;SessionAttributes&lt;/a&gt; has 2 parameters: &lt;strong&gt;values&lt;/strong&gt; (storing attributes’ names) and &lt;strong&gt;types&lt;/strong&gt; (storing attributes’ types).&lt;/p&gt;&#xA;&lt;p&gt;It’s pretty straightforward for &lt;strong&gt;values&lt;/strong&gt;. You specify the name of your attribute and it is &lt;em&gt;remembered&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;It’s trickier for &lt;strong&gt;types&lt;/strong&gt;. For example:&lt;/p&gt;&#xA;&lt;p&gt;– &lt;code&gt;@SessionAttributes (types= java.util.List.class)&lt;/code&gt; does not work!&lt;/p&gt;&#xA;&lt;p&gt;– But &lt;code&gt;@SessionAttributes (types= java.util.ArrayList.class)&lt;/code&gt; works (but not always)&lt;/p&gt;&#xA;&lt;p&gt;The reason behind this peculiar behaviour is that Spring does exact matching of attribute’s type versus declared type, instead of assessing attribute object’s &lt;strong&gt;Is-A&lt;/strong&gt; relationship.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HOW YOUR CONSUMPTION BENEFIT SOCIETY?</title>
      <link>https://geraldnguyen.github.io/posts/2012/06/2012-06-27-how-your-consumption-benefit-society/</link>
      <pubDate>Wed, 27 Jun 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/06/2012-06-27-how-your-consumption-benefit-society/</guid>
      <description>&lt;p&gt;&lt;em&gt;(Disclaimer: I’m no economist. I simply find this story/concept interesting and want to share it)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you initially have $2000 cash and you buy yourself a new smartphone (or any other good). Let’s say it costs you $1000.&lt;/p&gt;&#xA;&lt;p&gt;So, after your buying:&lt;/p&gt;&#xA;&lt;p&gt;– You have $1000 left&lt;/p&gt;&#xA;&lt;p&gt;– Seller have $1000 revenue&lt;/p&gt;&#xA;&lt;p&gt;– You have a good (i.e. the phone) worth $1000.&lt;/p&gt;&#xA;&lt;p&gt;Thus your initial $2000 is split into 3 pieces which in total worth $3000.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java XML Parse error: Tried all: &#39;1&#39; addresses, but could not connect over HTTP to server</title>
      <link>https://geraldnguyen.github.io/posts/2012/03/2012-03-09-java-xml-parse-error/</link>
      <pubDate>Fri, 09 Mar 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/03/2012-03-09-java-xml-parse-error/</guid>
      <description>&lt;p&gt;I had a &lt;a href=&#34;https://geraldnguyen.github.io/posts/2010/10/2010-10-26-weblogic-saxparserfactory-issue/&#34;&gt;previous problem with Tiles and XML&lt;/a&gt;  (and common-digester). I resolved it by telling WLS to use a different &lt;code&gt;SAXParserFactory&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;But when my &lt;code&gt;SAXParserFactory&lt;/code&gt; was correct and I still encountered XML parsing error for the sample code from Tiles&amp;rsquo;s website, it is really puzzling.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java.net.ConnectException: Tried all: &amp;#39;1&amp;#39; addresses, but could not connect over HTTP to server: &amp;#39;tiles.apache.org&amp;#39;, port: &amp;#39;80&amp;#39;        at weblogic.net.http.HttpClient.openServer(HttpClient.java:312)  ...        at org.apache.commons.digester.Digester.createInputSourceFromURL(Digester.java:2072)        at org.apache.commons.digester.Digester.resolveEntity(Digester.java:1725)        at com.sun.org.apache.xerces.internal.util.EntityResolverWrapper.resolveEntity(EntityResolverWrapper.java:107)        at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.resolveEntityAsPerStax(XMLEntityManager.java:1018)        ..        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)  ...        at org.apache.commons.digester.Digester.parse(Digester.java:1887)        at org.apache.tiles.definition.digester.DigesterDefinitionsReader.read(DigesterDefinitionsReader.java:267)&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>How do you display input validation error</title>
      <link>https://geraldnguyen.github.io/posts/2011/02/2011-02-24-display-input-validation-error/</link>
      <pubDate>Thu, 24 Feb 2011 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2011/02/2011-02-24-display-input-validation-error/</guid>
      <description>&lt;h2 id=&#34;display-errors-in-red-below-each-invalid-input-field&#34;&gt;Display errors in red below each invalid input field&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-UaBwgVJVorw/TWYOkgMSUDI/AAAAAAAAADI/uLVXDdt-rr0/s320/twitter_error.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Blogger: &lt;a href=&#34;https://www.google.com/accounts/CreateAccount?continue=https%3A%2F%2Fwww.blogger.com%2Floginz%3Fd%3Dhttp%253A%252F%252Fwww.blogger.com%252Fhome%26a%3DADD_SERVICE_FLAG&amp;amp;hl=en_GB&amp;amp;service=blogger&amp;amp;skipvpage=true&amp;amp;ltmpl=start&amp;amp;naui=8&#34;&gt;https://www.google.com/accounts/CreateAccount?continue=https%3A%2F%2Fwww.blogger.com%2Floginz%3Fd%3Dhttp%253A%252F%252Fwww.blogger.com%252Fhome%26a%3DADD_SERVICE_FLAG&amp;amp;hl=en_GB&amp;amp;service=blogger&amp;amp;skipvpage=true&amp;amp;ltmpl=start&amp;amp;naui=8&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Yahoo Mail: &lt;a href=&#34;https://edit.yahoo.com/registration?.intl=us&amp;amp;.pd=ym_ver%253D0%2526c%253D%2526ivt%253D%2526sg%253D&amp;amp;new=1&amp;amp;.done=http%3A//mail.yahoo.com&amp;amp;.src=ym&amp;amp;.v=0&amp;amp;.u=cgf061p6mc1fm&amp;amp;partner=&amp;amp;.partner=&amp;amp;pkg=&amp;amp;stepid=&amp;amp;.p=&amp;amp;promo=&amp;amp;.last=&#34;&gt;https://edit.yahoo.com/registration?.intl=us&amp;amp;.pd=ym_ver%253D0%2526c%253D%2526ivt%253D%2526sg%253D&amp;amp;new=1&amp;amp;.done=http%3A//mail.yahoo.com&amp;amp;.src=ym&amp;amp;.v=0&amp;amp;.u=cgf061p6mc1fm&amp;amp;partner=&amp;amp;.partner=&amp;amp;pkg=&amp;amp;stepid=&amp;amp;.p=&amp;amp;promo=&amp;amp;.last=&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Oracle Forum: &lt;a href=&#34;https://myprofile.oracle.com/EndUser/faces/profile/createUser.jspx?nextURL=http%3A%2F%2Fforums.oracle.com&#34;&gt;https://myprofile.oracle.com/EndUser/faces/profile/createUser.jspx?nextURL=http%3A%2F%2Fforums.oracle.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/account/create&#34;&gt;https://twitter.com/account/create&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Esnip (on Firefox): &lt;a href=&#34;http://www.esnips.com/NewAccountAction.ns?action=init&#34;&gt;http://www.esnips.com/NewAccountAction.ns?action=init&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Hotmail: &lt;a href=&#34;https://signup.live.com/signup.aspx?id=64855&amp;amp;mkt=en-US&amp;amp;form=MWGELB&amp;amp;publ=SIGNINHM&amp;amp;crea=SITEACQ_CIMS015888_Hotmail_EN-US_0x0_36214&amp;amp;lic=1&#34;&gt;https://signup.live.com/signup.aspx?id=64855&amp;amp;mkt=en-US&amp;amp;form=MWGELB&amp;amp;publ=SIGNINHM&amp;amp;crea=SITEACQ_CIMS015888_Hotmail_EN-US_0x0_36214&amp;amp;lic=1&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Job Street: &lt;a href=&#34;http://myjobstreet.jobstreet.com/registration/quick-register.php?site=sg&amp;amp;deposit_through=s&#34;&gt;http://myjobstreet.jobstreet.com/registration/quick-register.php?site=sg&amp;amp;deposit_through=s&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;JobsDB: &lt;a href=&#34;http://sg.jobsdb.com/SG/EN/JobSeeker/Registration&#34;&gt;http://sg.jobsdb.com/SG/EN/JobSeeker/Registration&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Property Guru: &lt;a href=&#34;http://www.propertyguru.com.sg/register#top&#34;&gt;http://www.propertyguru.com.sg/register#top&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;display-an-generic-message-at-the-top-of-the-page--display-errors-in-red-below-each-invalid-input-field&#34;&gt;Display an generic message at the top of the page + Display errors in red below each invalid input field&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-x26_NJbUgeg/TWYPwfqy9OI/AAAAAAAAADY/BiNonMUIVeE/s320/vietnamwork_error.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Static vs Singleton Revisited</title>
      <link>https://geraldnguyen.github.io/posts/2011/02/2011-02-14-static-singleton-revisited/</link>
      <pubDate>Thu, 10 Feb 2011 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2011/02/2011-02-14-static-singleton-revisited/</guid>
      <description>&lt;h1 id=&#34;static-vs-singleton-vs-dependency-injection&#34;&gt;Static vs Singleton vs Dependency Injection&lt;/h1&gt;&#xA;&lt;p&gt;Why visited? Because I wrote &lt;a href=&#34;https://geraldnguyen.github.io/posts/2011/01/2011-01-16-static-method-singleton/&#34;&gt;one&lt;/a&gt; before&lt;/p&gt;&#xA;&lt;p&gt;I no longer favor &lt;strong&gt;static&lt;/strong&gt; over &lt;strong&gt;singleton&lt;/strong&gt; as much as before. Static is convenient (sometimes very!), low memory footprint. But it does take away several Object-Orientation (OO) &amp;rsquo;s strength. In addition, it couples your code to a specific implementation class. Singleton is less convenient (sometimes troublesome), slightly higher memory footprint, but it can deliver all OO&amp;rsquo;s strengths that static drops.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What makes Israel so innovative and entrepreneurial?</title>
      <link>https://geraldnguyen.github.io/posts/2011/02/2011-02-10-israel-innovative-entrepreneurial/</link>
      <pubDate>Thu, 10 Feb 2011 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2011/02/2011-02-10-israel-innovative-entrepreneurial/</guid>
      <description>&lt;p&gt;I really admire the Israel mindset.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Milking Israel&amp;rsquo;s dairy expertise in Vietnam&#xA;(&lt;a href=&#34;http://www.israel21c.org/201102078760/environment/milking-israels-dairy-expertise-in-vietnam&#34;&gt;http://www.israel21c.org/201102078760/environment/milking-israels-dairy-expertise-in-vietnam&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;New Zealand cows are arriving by the boatload in Vietnam as part of an Israeli-led $500 million dairy farm project there.&lt;/p&gt;&#xA;&lt;p&gt;Israeli company, SAE Afikim is helping Vietnam develop its dairy industry, in the largest project of its kind in the world.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;In the largest project of its kind in the world and the biggest ever undertaken by an Israeli firm, 30,000 dairy cows are being flown to Vietnam to supply 300 million liters of milk annually as part of a $500 million dairy farm project there.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Harvey Balls</title>
      <link>https://geraldnguyen.github.io/posts/2011/01/2011-01-23-harvey-balls/</link>
      <pubDate>Sun, 23 Jan 2011 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2011/01/2011-01-23-harvey-balls/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Harvey_Balls&#34;&gt;http://en.wikipedia.org/wiki/Harvey_Balls&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Static method vs Singleton class</title>
      <link>https://geraldnguyen.github.io/posts/2011/01/2011-01-16-static-method-singleton/</link>
      <pubDate>Sun, 16 Jan 2011 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2011/01/2011-01-16-static-method-singleton/</guid>
      <description>&lt;h1 id=&#34;static-method&#34;&gt;Static method&lt;/h1&gt;&#xA;&lt;p&gt;It really depends. If you hate storing object reference or passing it around, static is a excellent tool.&lt;/p&gt;&#xA;&lt;p&gt;But remember: &lt;code&gt;static&lt;/code&gt; method CANNOT be overridden by sub-classing, it&amp;rsquo;s only hidden. Refer to &lt;a href=&#34;http://faq.javaranch.com/view?OverridingVsHiding&#34;&gt;http://faq.javaranch.com/view?OverridingVsHiding&lt;/a&gt; for a simple explanation. (Side note: invoking a static method on a object reference only brings confusion, it&amp;rsquo;s the variable data type that determine which static method&amp;rsquo;s code will execute - remember: &lt;strong&gt;hidden&lt;/strong&gt;, not overridden).&lt;/p&gt;</description>
    </item>
    <item>
      <title>How Sun&#39;s certification exam are prepared</title>
      <link>https://geraldnguyen.github.io/posts/2011/01/2011-01-09-how-sun-certification-exam-prepared/</link>
      <pubDate>Sun, 09 Jan 2011 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2011/01/2011-01-09-how-sun-certification-exam-prepared/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Without getting into too much detail, I can tell you some of what Sun did to create their various Java certification exams. So, in the old Sun days&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;The whole process to create a new exam takes a long time. A first team of experts is assembled and for several months the team develops a new set of objectives. Once created, the new set of objectives go through all sorts of vetting / verification processes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Consistency in framework design</title>
      <link>https://geraldnguyen.github.io/posts/2011/01/2011-01-06-consistency-in-framework-design/</link>
      <pubDate>Thu, 06 Jan 2011 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2011/01/2011-01-06-consistency-in-framework-design/</guid>
      <description>&lt;h1 id=&#34;concistency&#34;&gt;Concistency&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Framework: a set of ideas, principles, agreements, or rules that provides the basis or outline for something intended to be more fully developed at a later stage (MSN Dictionary)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Not sure if you agree, but for me, the above definition implies &amp;ldquo;consistency&amp;rdquo; as a essential effect of using a framework. In the context of software development, using a framework usually equals to following its design guideline, or  implementing/extending its interfaces/base classes. Things can stuck or go wrong and time will definitely be wasted if you don&amp;rsquo;t.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Who owns the source code? Employee or employer?</title>
      <link>https://geraldnguyen.github.io/posts/2010/12/2010-12-21-who-own-the-source-code/</link>
      <pubDate>Tue, 21 Dec 2010 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2010/12/2010-12-21-who-own-the-source-code/</guid>
      <description>&lt;p&gt;I found these 2 articles discussing &amp;ldquo;who owns the source code&amp;rdquo; issue.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.computerworld.com/s/article/print/9126595/Who_owns_the_code_Beware_copyright_pitfalls?taxonomyId=11&amp;amp;taxonomyName=Development&#34;&gt;http://www.computerworld.com/s/article/print/9126595/Who_owns_the_code_Beware_copyright_pitfalls?taxonomyId=11&amp;amp;taxonomyName=Development&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.burgess.co.nz/law/copyright-ownership-and-software-development&#34;&gt;http://www.burgess.co.nz/law/copyright-ownership-and-software-development&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;The first article discusses the issues using US copyright law; the second is in the context of New Zealand. There are slight difference between the 2 laws with regard to Contractor/Customer relationship but the case of Employee/Employer is the same: without explicit agreement (contract), the Employer owns the source code.&lt;/p&gt;&#xA;&lt;p&gt;In Singapore, it is the same: Employer is the copyright holder. This article briefly mentions it: &lt;a href=&#34;http://www.guidemesingapore.com/incorporation/trademarks/singapore-copyright-law-introduction&#34;&gt;http://www.guidemesingapore.com/incorporation/trademarks/singapore-copyright-law-introduction&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quicksort vs Merge sort in Java</title>
      <link>https://geraldnguyen.github.io/posts/2010/12/2010-12-12-quicksort-mergesort-java/</link>
      <pubDate>Sun, 12 Dec 2010 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2010/12/2010-12-12-quicksort-mergesort-java/</guid>
      <description>&lt;p&gt;The title is a little larger that what I have in this entry :D&lt;/p&gt;&#xA;&lt;p&gt;If you want the answer fast, go here &lt;a href=&#34;http://www.coderanch.com/t/520171/java/java/Why-Collections-sort-merge-sort#2355668&#34;&gt;http://www.coderanch.com/t/520171/java/java/Why-Collections-sort-merge-sort#2355668&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;And here is a longer write-up:&lt;/p&gt;&#xA;&lt;p&gt;I participated in an thread in Javaranche regarding why Arrays uses quicksort and Collections use merge sort (&lt;a href=&#34;http://www.coderanch.com/t/520171/java/java/Why-Collections-sort-merge-sort)&#34;&gt;http://www.coderanch.com/t/520171/java/java/Why-Collections-sort-merge-sort)&lt;/a&gt;. The thread starter claimed that quicksort is the best sort algorithm, for which I disagreed. I also replied with a link to wikipedia about merge sort performs better when the underlying datatype does not support random access (as does array). I thought that was the reason why Collections use merge sort: because a collection type such as LinkedList does not necessarily support random access.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How do you initialize an EJB3 Stateful Session Bean ?</title>
      <link>https://geraldnguyen.github.io/posts/2010/11/2010-11-10-initialize-ejb3-stateful-session-bean/</link>
      <pubDate>Sat, 20 Nov 2010 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2010/11/2010-11-10-initialize-ejb3-stateful-session-bean/</guid>
      <description>&lt;p&gt;In EJB 3, we can obtain a reference to Stateful Session Bean either either by using &lt;code&gt;@EJB &lt;/code&gt;annotation or performing JNDI look-up. Yet these 2 methods do not offer you a way to initialize a Stateful SB as EJB 2.1  Home interface&amp;rsquo;s &lt;code&gt;createMETHODs&lt;/code&gt; do.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;StatefulSB bean = home.create (arg0, arg1, arg2);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EJB3 defines &lt;code&gt;@Init&lt;/code&gt; annotation as a replacement for EJB 2.1 &lt;code&gt;createMETHOD&lt;/code&gt;. But it is intended for bean written to 2.1 client view (that means you will need to define an home interface and annotate the bean class with &lt;code&gt;@RemoteHome&lt;/code&gt; or &lt;code&gt;@LocalHome&lt;/code&gt; annotations)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Weblogic SAXParserFactory Issue</title>
      <link>https://geraldnguyen.github.io/posts/2010/10/2010-10-26-weblogic-saxparserfactory-issue/</link>
      <pubDate>Tue, 26 Oct 2010 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2010/10/2010-10-26-weblogic-saxparserfactory-issue/</guid>
      <description>&lt;p&gt;I have just wasted 1 whole day trying to debug this issues. Since I get most help from the internet, here is what I can do in return :D&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;I was trying to build a Spring 3.0 webapp with Tiles 2.2. Since Tiles depends on &lt;code&gt;common-digester&lt;/code&gt; which subsequently depends on &lt;code&gt;SAXParserFactory&lt;/code&gt;, I got stuck in a whole range of strange Weblogic behaviors.&lt;/p&gt;&#xA;&lt;p&gt;Firstly, I got &lt;code&gt;UnsupportedOperationException&lt;/code&gt; everytime I first access the webapp. Subsequent access is fine, but the first always encounters that exception. Hours of googling tells me that the exception is due to weblogic&amp;rsquo;s &lt;code&gt;RegistrySAXParserFactory&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recursive Tagfile</title>
      <link>https://geraldnguyen.github.io/posts/2010/03/2010-03-24-recursive-tagfile/</link>
      <pubDate>Wed, 24 Mar 2010 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2010/03/2010-03-24-recursive-tagfile/</guid>
      <description>&lt;p&gt;Tagfile is a good alternative for lazy people like me who hates doing java coding and XML configuration for simple task with lots of HTML codes.&lt;/p&gt;&#xA;&lt;p&gt;But laziness knows no limit. Just now I ended up wasting haft a day on a recursive tagfile that would otherwise be completed within 1 hour at most. Yet it was an experience that&amp;rsquo;s worth sharing.&lt;/p&gt;&#xA;&lt;p&gt;The tagfile is named &lt;code&gt;catalogue.tag&lt;/code&gt;. Its purpose is to display recursively a hierarchy tree of catalogues..&lt;/p&gt;</description>
    </item>
    <item>
      <title>Interesting - AKA</title>
      <link>https://geraldnguyen.github.io/posts/2010/03/2010-03-10-interesting/</link>
      <pubDate>Wed, 10 Mar 2010 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2010/03/2010-03-10-interesting/</guid>
      <description>&lt;p&gt;AKA = Also-Known-As&lt;/p&gt;</description>
    </item>
    <item>
      <title>Combine EJB and WAR file in a same web service EAR</title>
      <link>https://geraldnguyen.github.io/posts/2010/03/2010-03-02-combine-ejb-war-in-ear/</link>
      <pubDate>Tue, 02 Mar 2010 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2010/03/2010-03-02-combine-ejb-war-in-ear/</guid>
      <description>&lt;p&gt;That has been my challenge since yesterday. And I think I have just got it :D&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s see if I can reconstruct a step-by-step manual:&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-first-of-all-let-have-some-understanding-of-the-structure-of-a-ear-file&#34;&gt;1. First of all, let have some understanding of the structure of a EAR file.&lt;/h3&gt;&#xA;&lt;p&gt;EAR stands for Enterprise ARchive. It&amp;rsquo;s a convenient mean to to pack and deploy components of an enterprise application. Essentially, you can pack WAR, EJB, Resource Adapter and supporting libraries inside a EAR file. Having them all in one place, as a single unit tremendously helps release management and deployment. But it does pose some challenges in the context of class-loading.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2-way SSL with WebLogic server 10.3</title>
      <link>https://geraldnguyen.github.io/posts/2010/02/2010-02-03-weblogic-2way-ssl/</link>
      <pubDate>Wed, 03 Feb 2010 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2010/02/2010-02-03-weblogic-2way-ssl/</guid>
      <description>&lt;h3 id=&#34;tools&#34;&gt;TOOLS&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;keytool: a key and certificate management tool. Provided as part of Sun&amp;rsquo;s JDK Online reference: &lt;a href=&#34;http://java.sun.com/javase/6/docs/technotes/tools/windows/keytool.htm&#34;&gt;http://java.sun.com/javase/6/docs/technotes/tools/windows/keytool.htm&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;utils.CertGen: a certification generate tool provided by WLS. By default it will generate certificates from default CertGenCA.der and CertGenCAKey.der; but have not been able to generate certificate from other cert and key (probably because of the lack of original cert &amp;amp; key AND CertGenCA has constraint of max 1 descendant). Online renference: &lt;a href=&#34;http://download.oracle.com/docs/cd/E13222_01/wls/docs103/admin_ref/utils.html#wp1198920&#34;&gt;http://download.oracle.com/docs/cd/E13222_01/wls/docs103/admin_ref/utils.html#wp1198920&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>J2EE Programming Tips</title>
      <link>https://geraldnguyen.github.io/posts/2009/05/2009-05-04-j2ee-tips/</link>
      <pubDate>Mon, 04 May 2009 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2009/05/2009-05-04-j2ee-tips/</guid>
      <description>&lt;h1 id=&#34;j2ee-programming&#34;&gt;J2EE Programming&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Learn to program Java well. SCJP is nice to have.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Do program with performance-awareness.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Always try to optimize your program; performance is a big concern in any J2EE application.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Dont just follow what other people call best practices, they may not fit your need while being costly to implement.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;J2EE application&amp;rsquo;s performance is often constraint by its interraction with database(s). Optimise your database access, data transaction management codes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Interesting - 2009</title>
      <link>https://geraldnguyen.github.io/posts/2009/03/2009-03-08-interesting/</link>
      <pubDate>Sun, 08 Mar 2009 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2009/03/2009-03-08-interesting/</guid>
      <description>&lt;h3 id=&#34;capitalism-vs-socialism&#34;&gt;Capitalism vs Socialism&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;“Capitalism is the unequal distribution of wealth. Socialism is the equal distribution of poverty.” – Winston Churchill&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;president-harry-truman&#34;&gt;President Harry Truman&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;President Harry Truman once said that he wanted to find a one-armed economist.&lt;/p&gt;&#xA;&lt;p&gt;When he asked his economists for advice, they always answered, “On the onehand, . . . . On the other hand, . . . .”&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
  </channel>
</rss>
