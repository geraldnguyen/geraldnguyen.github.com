<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jdbc on Gerald Nguyen</title>
    <link>https://geraldnguyen.github.io/tags/jdbc/</link>
    <description>Recent content in Jdbc on Gerald Nguyen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Oct 2012 09:19:42 +0100</lastBuildDate>
    <atom:link href="https://geraldnguyen.github.io/tags/jdbc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JDBC Transaction Without EJB</title>
      <link>https://geraldnguyen.github.io/posts/2012/10/2012-10-24-jdbc-transaction-without-ejb/</link>
      <pubDate>Wed, 24 Oct 2012 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2012/10/2012-10-24-jdbc-transaction-without-ejb/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;Create a DAO method in which you set JDBC connectionâ€™s auto-commit property to false&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dbConn.setAutoCommit(false);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Execute all your queries&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;stmt = dbConn.createStatement();&#xA;&#xA;result = stmt.executeQuery(query);&#xA;&#xA;stmt.executeUpdate(update);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Commit or rollback the transaction&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dbConn.commit();&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;Reset auto-commit to true again for other execution&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dbConn.setAutoCommit(true);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is really simple, as it should be for something purely mechanical. The challenge for every programmer is how to write your transaction code or order your queries such that you can achieve desired result.&lt;/p&gt;</description>
    </item>
    <item>
      <title>J2EE Programming Tips</title>
      <link>https://geraldnguyen.github.io/posts/2009/05/2009-05-04-j2ee-tips/</link>
      <pubDate>Mon, 04 May 2009 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2009/05/2009-05-04-j2ee-tips/</guid>
      <description>&lt;h1 id=&#34;j2ee-programming&#34;&gt;J2EE Programming&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Learn to program Java well. SCJP is nice to have.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Do program with performance-awareness.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Always try to optimize your program; performance is a big concern in any J2EE application.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Dont just follow what other people call best practices, they may not fit your need while being costly to implement.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;J2EE application&amp;rsquo;s performance is often constraint by its interraction with database(s). Optimise your database access, data transaction management codes.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
