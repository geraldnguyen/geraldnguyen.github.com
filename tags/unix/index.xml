<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unix on Gerald Nguyen</title>
    <link>https://geraldnguyen.github.io/tags/unix/</link>
    <description>Recent content in Unix on Gerald Nguyen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Jul 2013 09:19:42 +0100</lastBuildDate>
    <atom:link href="https://geraldnguyen.github.io/tags/unix/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Unix] â€“ Recursively Listing Files Under a Directory</title>
      <link>https://geraldnguyen.github.io/posts/2013/07/2013-07-22-unix-recursively-listing-files/</link>
      <pubDate>Mon, 22 Jul 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/07/2013-07-22-unix-recursively-listing-files/</guid>
      <description>&lt;p&gt;If you prefer a DIY script:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#! /bin/bash&#xA; &#xA; &#xA;function list {&#xA;        if [ -z $1 ]&#xA;        then&#xA;                echo list starting_dir [exclude_file_or_folder] [action_on_file]&#xA;                exit 1&#xA;        elif [ &amp;#34;$1&amp;#34; == &amp;#34;-help&amp;#34; ]&#xA;        then&#xA;                echo list starting_dir [exclude_file_or_folder] [action_on_file]&#xA;                echo [exclude_file_or_folder]: use string that works with egrep e.g. &amp;#34;.jar|.log|.bak .jar|.log|.bak&amp;#34;&#xA;                echo [action_on_file]: if specified, output listing will not be in ls -l format&#xA;                exit 0&#xA;        fi&#xA; &#xA;        local path=$1&#xA; &#xA;        if [ -z $2 ]&#xA;        then&#xA;                ls -al $path&#xA;        else&#xA;                ls -al $path | egrep -v $2&#xA;        fi&#xA; &#xA;        for file in `ls -a $path`&#xA;        do&#xA;                if [ &amp;#34;$file&amp;#34; != &amp;#34;.&amp;#34; ] &amp;amp;&amp;amp; [ &amp;#34;$file&amp;#34; != &amp;#34;..&amp;#34; ] &amp;amp;&amp;amp; [ -d &amp;#34;$path/$file&amp;#34; ]&#xA;                then&#xA;                        file=`echo $file|grep -v $2`&#xA;                        if [ -z $file ]&#xA;                        then&#xA;                                echo &amp;#34;skipped&amp;#34; &amp;gt;&amp;gt; /dev/null&#xA;                        else&#xA;                                echo ============= $path/$file ================&#xA;                                list $path/$file $2 $3&#xA;                        fi&#xA;                fi&#xA;        done&#xA;}&#xA; &#xA; &#xA;list $1 $2 $3&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But there is a simple alternative&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
