<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shift Left on Gerald Nguyen</title>
    <link>https://geraldnguyen.github.io/tags/shift-left/</link>
    <description>Recent content in Shift Left on Gerald Nguyen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Jan 2023 09:19:42 +0100</lastBuildDate>
    <atom:link href="https://geraldnguyen.github.io/tags/shift-left/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shift Left Testing</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/shift-left-testing/</link>
      <pubDate>Mon, 16 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/shift-left-testing/</guid>
      <description>What is Shift Left Testing? A picture is worth a thousand words. Here are how Shift Left differs from the traditional approach&#xA;Source: https://www.bmc.com/blogs/what-is-shift-left-shift-left-testing-explained&#xA;How does my team shift left? We started with unit testing, by developers, for their own codes. This is the easiest shift to implement, though it still takes time, effort, and patience to get it right. I recommend Pragmatic Unit Testing in Java 8 with JUnit if you want quickly level-up</description>
    </item>
  </channel>
</rss>
