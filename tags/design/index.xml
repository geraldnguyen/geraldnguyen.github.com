<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on Gerald Nguyen</title>
    <link>https://example.org/tags/design/</link>
    <description>Recent content in Design on Gerald Nguyen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Feb 2011 09:19:42 +0100</lastBuildDate>
    <atom:link href="https://example.org/tags/design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Static vs Singleton Revisited</title>
      <link>https://example.org/posts/2011/02/2011-02-14-static-singleton-revisited/</link>
      <pubDate>Thu, 10 Feb 2011 09:19:42 +0100</pubDate>
      <guid>https://example.org/posts/2011/02/2011-02-14-static-singleton-revisited/</guid>
      <description>Static vs Singleton vs Dependency Injection Why visited? Because I wrote one before&#xA;I no longer favor static over singleton as much as before. Static is convenient (sometimes very!), low memory footprint. But it does take away several Object-Orientation (OO) &amp;rsquo;s strength. In addition, it couples your code to a specific implementation class. Singleton is less convenient (sometimes troublesome), slightly higher memory footprint, but it can deliver all OO&amp;rsquo;s strengths that static drops.</description>
    </item>
    <item>
      <title>Static method vs Singleton class</title>
      <link>https://example.org/posts/2011/01/2011-01-16-static-method-singleton/</link>
      <pubDate>Sun, 16 Jan 2011 09:19:42 +0100</pubDate>
      <guid>https://example.org/posts/2011/01/2011-01-16-static-method-singleton/</guid>
      <description>Static method It really depends. If you hate storing object reference or passing it around, static is a excellent tool.&#xA;But remember: static method CANNOT be overridden by sub-classing, it&amp;rsquo;s only hidden. Refer to http://faq.javaranch.com/view?OverridingVsHiding for a simple explanation. (Side note: invoking a static method on a object reference only brings confusion, it&amp;rsquo;s the variable data type that determine which static method&amp;rsquo;s code will execute - remember: hidden, not overridden).</description>
    </item>
    <item>
      <title>Consistency in framework design</title>
      <link>https://example.org/posts/2011/01/2011-01-06-consistency-in-framework-design/</link>
      <pubDate>Thu, 06 Jan 2011 09:19:42 +0100</pubDate>
      <guid>https://example.org/posts/2011/01/2011-01-06-consistency-in-framework-design/</guid>
      <description>Concistency Framework: a set of ideas, principles, agreements, or rules that provides the basis or outline for something intended to be more fully developed at a later stage (MSN Dictionary)&#xA;Not sure if you agree, but for me, the above definition implies &amp;ldquo;consistency&amp;rdquo; as a essential effect of using a framework. In the context of software development, using a framework usually equals to following its design guideline, or implementing/extending its interfaces/base classes.</description>
    </item>
  </channel>
</rss>
