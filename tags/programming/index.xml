<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Gerald Nguyen</title>
    <link>https://geraldnguyen.github.io/tags/programming/</link>
    <description>Recent content in Programming on Gerald Nguyen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 May 2024 08:00:00 -0700</lastBuildDate>
    <atom:link href="https://geraldnguyen.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Behavior Driven Development (BDD) with Selenium in Python</title>
      <link>https://geraldnguyen.github.io/posts/2024/05/behavior-driven-development-bdd-with-selenium-in-python/</link>
      <pubDate>Mon, 20 May 2024 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2024/05/behavior-driven-development-bdd-with-selenium-in-python/</guid>
      <description>&lt;p&gt;This is a continuation from my previous article where we learned the basic of Selenium and how to program it in Python to perform UI automation testing.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://levelup.gitconnected.com/getting-started-on-ui-automation-testing-using-selenium-with-python-b4903dad5a74?source=post_page-----58390fcc0325--------------------------------&#34;&gt;Getting started on UI automation testing using Selenium with Python&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;container alert alert-secondary&#34;&gt;&#xA;    &lt;div&gt;&lt;a href=&#34;https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/&#34; alt=&#34;Five Minimum Viable Interview Questions series — Updated 17 Feb 2023&#34;&gt;&#xA;        &lt;strong&gt;Five Minimum Viable Interview Questions series — Updated 17 Feb 2023&lt;/strong&gt;&#xA;    &lt;/a&gt;&lt;/div&gt;&#xA;    &lt;div class=&#34;d-flex align-items-start&#34;&gt;&#xA;      &#xA;          &#xA;          &#xA;              &#xA;              &lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/0_qxJpBdXPqAG2Z7NJ_hu_d4745adde4d0d962.jpg&#34; alt=&#34;Five Minimum Viable Interview Questions series — Updated 17 Feb 2023&#34; /&gt;&#xA;          &#xA;      &#xA;      &lt;p class=&#34;px-1&#34;&gt;&#xA;        &lt;small&gt;Interviewer: ask them if your interview is running out of time. Interviewee: practice them if your preparation is running out of time.&lt;/small&gt;&#xA;      &lt;/p&gt;</description>
    </item>
    <item>
      <title>SOLID in Action: the Dependency Inversion Principle</title>
      <link>https://geraldnguyen.github.io/posts/2023/02/solid-dependency-inversion-principle/</link>
      <pubDate>Tue, 21 Feb 2023 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/02/solid-dependency-inversion-principle/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/02/solid-dependency-inversion-principle/0_Uv2de6h1frX8mT2N.jpg&#34;&#xA;    alt=&#34;Photo by ocd studio on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@ocd_studio?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;ocd studio&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;the-dependency-inversion-principle-dip&#34;&gt;The Dependency Inversion Principle (DIP)&lt;/h1&gt;&#xA;&lt;p&gt;Naive application of traditional software development methods (e.g. &lt;a href=&#34;https://en.wikipedia.org/wiki/SADT&#34;&gt;&lt;strong&gt;SADT&lt;/strong&gt;&lt;/a&gt; or Structured Analysis and Design Technique), in the past, often resulted in a type of relationship where high-level modules depended on lower implementation details. This form of relationship often leads to &lt;a href=&#34;https://web.archive.org/web/20110714224327/http://www.objectmentor.com/resources/articles/dip.pdf&#34;&gt;rigidity, fragility, and immobility&lt;/a&gt;. These are the symptoms of bad design according to &lt;a href=&#34;https://en.wikipedia.org/wiki/Robert_C._Martin&#34;&gt;Robert C. Martin&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/02/solid-dependency-inversion-principle/1_RVjxPenHUcH9qZ_AuwwvNQ.png&#34;&#xA;    alt=&#34;A naive application of top-down approaches can lead to bad design. Source: R.C.M paper&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;A naive application of top-down approaches can lead to bad design. Source: &lt;a href=&#34;https://web.archive.org/web/20110714224327/http://www.objectmentor.com/resources/articles/dip.pdf&#34;&gt;R.C.M paper&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Five Minimum Viable Interview Questions series — Updated 17 Feb 2023</title>
      <link>https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/</link>
      <pubDate>Fri, 17 Feb 2023 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://miro.medium.com/v2/resize:fit:700/0*qxJpBdXPqAG2Z7NJ&#34;&#xA;    alt=&#34;Photo by Wes Hicks on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@sickhews?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Wes Hicks&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;rationale&#34;&gt;Rationale&lt;/h1&gt;&#xA;&lt;p&gt;Let’s face it. A developer is expected to know A LOT these days.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/02/five-minimum-viable-interview-questions-series/1_VoFu1hUShEKCl-14qtPoFQ.png&#34;&#xA;    alt=&#34;A typical job requirement (screenshot)&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;A typical job requirement (screenshot)&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;And that makes interviewing a candidate hard because there is never enough time to ask all the necessary questions.&lt;/p&gt;&#xA;&lt;p&gt;On the other hand, that also makes preparing for an interview hard because there are too many areas and details to prepare for.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Web Application Development: An Introductory Course</title>
      <link>https://geraldnguyen.github.io/posts/2023/02/web-application-development-introductory-course/</link>
      <pubDate>Fri, 10 Feb 2023 12:00:00 +0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/02/web-application-development-introductory-course/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/02/web-application-development-introductory-course/0_f9Ob8l4hmR3m16dd.jpg&#34;&#xA;    alt=&#34;Photo by Hal Gatewood on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by Hal Gatewood on Unsplash&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;I have been developing Web Applications since my first job after graduation in 2007. Working on both frontend and backend then and now, I suppose I know enough about the technologies required to develop a web application. Now I want to share that with the larger community.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;page-break&#34; role=&#34;separator&#34;&gt;&#xA;  &lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;who-is-this-for&#34;&gt;Who is this for?&lt;/h2&gt;&#xA;&lt;p&gt;This course is intended for beginners who know a bit basics of programming and want to build an application that runs on the web.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Look Good to Me — Approve”</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/look-good-to-me-approve/</link>
      <pubDate>Sun, 29 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/look-good-to-me-approve/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/look-good-to-me-approve/1_JHxNSxdzMwDcabLzhlTyCw.png&#34;&#xA;    alt=&#34;https://chrome.google.com/webstore/detail/lgtm-approve/odeollamfjdmamamonbfigajkhakcmag/&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/lgtm-approve/odeollamfjdmamamonbfigajkhakcmag/&#34;&gt;https://chrome.google.com/webstore/detail/lgtm-approve/odeollamfjdmamamonbfigajkhakcmag/&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A chrome extension that automatically adds a comment while approving the request. Doing so cements the collaboration between the reviewer and the merge request’s submitter&lt;/p&gt;&#xA;&lt;p&gt;The comment is defaulted to “LGTM” (Look Good to Me) and can be customized.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;The extension is available on Chrome Web Store at &lt;a href=&#34;https://chrome.google.com/webstore/detail/lgtm-approve/odeollamfjdmamamonbfigajkhakcmag/&#34;&gt;https://chrome.google.com/webstore/detail/lgtm-approve/odeollamfjdmamamonbfigajkhakcmag/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;how-it-works&#34;&gt;How it works&lt;/h1&gt;&#xA;&lt;p&gt;The extension works by replacing Gitlab’s “Approve” or “Approve Additionally” button with an upgraded button that adds a comment (e.g. “LGTM”) to the merge request while approving the request.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SOLID in Action: the Interface Segregation Principle</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/solid-interface-segregation-principle/</link>
      <pubDate>Fri, 27 Jan 2023 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/solid-interface-segregation-principle/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/solid-interface-segregation-principle/0_2JS1H36QRQHFriO0.jpg&#34;&#xA;    alt=&#34;Photos by Eugen Str on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photos by &lt;a href=&#34;https://unsplash.com/@eugen1980?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Eugen Str&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/solid-interface-segregation-principle/0_MRP8w8sESbbxCOzU.jpg&#34;&#xA;    alt=&#34;Photos by Patrick on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photos by &lt;a href=&#34;https://unsplash.com/@pf91_photography?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Patrick&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;If you are going to build a house, a table, or a chair, what is your preferred option? The multiple tools on the first picture or one Swiss knife on the second?&lt;/p&gt;&#xA;&lt;p&gt;Yep, you are right. If you want to create something useful that last for years, you need specialized tools. The same thinking applies to software development, if you want to create a serious application, you need specialized components represented by their own, purposely designed interfaces. The Interface Segregation Principle (ISP) is available to guide the creation of those interfaces.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SOLID in Action — the Liskov Substitution Principle</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/solid-liskov-substitution-principle/</link>
      <pubDate>Mon, 09 Jan 2023 08:00:00 -0700</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/solid-liskov-substitution-principle/</guid>
      <description>&lt;p&gt;Let us start with a question:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Can social media connections &lt;em&gt;substitute&lt;/em&gt; for real life friends and family?&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Well, it depends on how we define &amp;ldquo;connection&amp;rdquo;. If we have it as below, then according to the Liskow Substitution Principle (LSP), the answer is No.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/solid-liskov-substitution-principle/1_IuKgDzlyhAKEuql9Yr7qGw.png&#34;&#xA;    alt=&#34;Connection classes&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Connection classes&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Before we go further into this example, let’s back it up a bit to study the official definition of LSP.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;There is some math but I promise to keep it brief&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevOps: Divide and Conquer with Gitlab Parent-Child Pipeline</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/devops-divide-conquer-with-gitlab-parent-child-pipeline/</link>
      <pubDate>Mon, 09 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/devops-divide-conquer-with-gitlab-parent-child-pipeline/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/devops-divide-conquer-with-gitlab-parent-child-pipeline/1_J8FiO-W4H06JsKgA5rUuLQ.webp&#34;&#xA;    alt=&#34;Gitlab parent-child pipeline&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Gitlab parent-child pipeline&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;scenario&#34;&gt;Scenario&lt;/h1&gt;&#xA;&lt;p&gt;You are building a pipeline that helps your team reset test data in different non-prod environments such as Test and Sandbox.&lt;/p&gt;&#xA;&lt;p&gt;Under each environment, there are several application services or databases to clear. Let’s call them A, B, and C.&lt;/p&gt;&#xA;&lt;h1 id=&#34;trivial-approach&#34;&gt;Trivial Approach&lt;/h1&gt;&#xA;&lt;p&gt;You can create 3 separate jobs for each environment&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/devops-divide-conquer-with-gitlab-parent-child-pipeline/1_gX6iHjoBCpJUpGnkqUE8Eg.webp&#34;&#xA;    alt=&#34;Trivial approach: 3 separate jobs for each environment&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Trivial approach: 3 separate jobs for each environment&lt;/p&gt;</description>
    </item>
    <item>
      <title>Maven — 3 Free Resources for Beginner and Intermediate Java Developers</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/maven-3-free-resources-for-beginner-and-intermediate-java-developers/</link>
      <pubDate>Sat, 07 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/maven-3-free-resources-for-beginner-and-intermediate-java-developers/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/maven-3-free-resources-for-beginner-and-intermediate-java-developers/1_OP59b2RYiBgs_OK9PqAzMA.webp&#34;&#xA;    alt=&#34;Screenshot of a Maven POM file&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Screenshot of a Maven POM file&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Maven is the most popular build and dependency management system from the Apache Foundation.&lt;/p&gt;&#xA;&lt;p&gt;If you plan to develop serious applications in Java or if you have just started to, you have better pick up Maven. I have just the resources for you below to learn about it and move from Beginner to Intermediate in no time.&lt;/p&gt;&#xA;&#xA;&lt;div class=&#34;page-break&#34; role=&#34;separator&#34;&gt;&#xA;  &lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&lt;span class=&#34;dot&#34;&gt;&lt;/span&gt;&#xA;&lt;/div&gt;&#xA;&lt;h1 id=&#34;beginner-tutorial&#34;&gt;Beginner tutorial&lt;/h1&gt;&#xA;&lt;p&gt;I often recommend Baeldung.com to my friends for beginner-level tutorials. They did it again here with this simple and easy-to-follow &lt;a href=&#34;https://www.baeldung.com/maven&#34;&gt;Maven tutorial&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Work-hard Verifying or Work-smart Mocking</title>
      <link>https://geraldnguyen.github.io/posts/2023/01/work-hard-verifying-or-work-smart-mocking/</link>
      <pubDate>Wed, 04 Jan 2023 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2023/01/work-hard-verifying-or-work-smart-mocking/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2023/01/work-hard-verifying-or-work-smart-mocking/0_huB0so5ACBot2PYg.webp&#34;&#xA;    alt=&#34;Photo by Tim Gouw on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@punttim?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Tim Gouw&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Let’s test this service&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;@Service&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;SampleService&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;final&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;SampleRepository&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;sampleRepository&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#6639ba&#34;&gt;SampleService&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;SampleRepository&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;sampleRepository&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;sampleRepository&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;sampleRepository&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;SampleEntity&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#6639ba&#34;&gt;createSampleEntity&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;SampleEntity&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;sampleEntity&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#f6f8fa;background-color:#82071e&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;SampleEntity&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;sampleEntity&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;setName&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;sample&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;sampleRepository&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;save&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;sampleEntity&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we want to test the method &lt;code&gt;createSampleEntity&lt;/code&gt; from &lt;code&gt;SampleService&lt;/code&gt;, there are 3 things we want to verify:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Retry WebClient Request</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/retry-webclient-request/</link>
      <pubDate>Fri, 30 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/retry-webclient-request/</guid>
      <description>&lt;h1 id=&#34;problem-statement&#34;&gt;Problem Statement&lt;/h1&gt;&#xA;&lt;p&gt;Sometimes web request fails, for whatever reason, and you need to retry it&lt;/p&gt;&#xA;&lt;p&gt;Let’s simulate a failed request scenario in a unit test. In the below code, the &lt;code&gt;webClient&lt;/code&gt; attempts to submit a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/employee/100&lt;/code&gt; (stored in constant &lt;code&gt;PATH&lt;/code&gt;). We mocked the backend server to fail with common status codes such as &lt;code&gt;BAD_REQUEST&lt;/code&gt;, &lt;code&gt;UNAUTHORIZED&lt;/code&gt; and validate that the client throws &lt;code&gt;WebClientResponseException&lt;/code&gt; upon receiving such statuses.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;@ParameterizedTest&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;@EnumSource&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;value&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;HttpStatus&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;mode&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;EnumSource&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;Mode&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;INCLUDE&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;names&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;BAD_REQUEST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;UNAUTHORIZED&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;FORBIDDEN&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;SERVICE_UNAVAILABLE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;INTERNAL_SERVER_ERROR&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;})&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#6639ba&#34;&gt;throwExceptionWhenReceiveNon200Response&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;HttpStatus&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;status&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;throws&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;InterruptedException&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// request  &lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;webClient&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;WebClient&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;builder&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;baseUrl&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;baseUrl&lt;span style=&#34;color:#1f2328&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;request&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;webClient&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;uri&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;PATH&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;retrieve&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;bodyToMono&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// response to first request with fail status  &lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;mockBackEnd&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;enqueue&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;new&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;MockResponse&lt;span style=&#34;color:#1f2328&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;setResponseCode&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;status&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()));&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// assert that exception thrown due to non-200 response  &lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;var&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;ex&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;assertThrows&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;WebClientResponseException&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;request&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;block&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;());&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;assertEquals&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;status&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;ex&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;getStatusCode&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;());&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#57606a&#34;&gt;// extra assert that the path is correct  &lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;assertEquals&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;PATH&lt;span style=&#34;color:#1f2328&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;mockBackEnd&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;takeRequest&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;getPath&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;());&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;retry-unchanged&#34;&gt;Retry unchanged&lt;/h1&gt;&#xA;&lt;p&gt;The easiest task is just retrying with the same request details.&lt;/p&gt;</description>
    </item>
    <item>
      <title>From Programmer to Writer</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/from-programmer-to-writer/</link>
      <pubDate>Sun, 25 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/from-programmer-to-writer/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/from-programmer-to-writer/0_wR0Ncqo7d8oeuaiD.jpg&#34;&#xA;    alt=&#34;Photo by Glenn Carstens-Peters on Unsplash&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Photo by &lt;a href=&#34;https://unsplash.com/@glenncarstenspeters?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Glenn Carstens-Peters&lt;/a&gt; on &lt;a href=&#34;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&#34;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;I’m a programmer by trade and write codes for a living. Then 1 month ago, I decided to become a writer. Here are the reasons why I did it and how I do it.&lt;/p&gt;&#xA;&lt;h1 id=&#34;im-pursuing-my-hobby&#34;&gt;I’m pursuing my hobby&lt;/h1&gt;&#xA;&lt;p&gt;I never considered writing a hobby. I barely managed to pass my literature and English classes. I preferred subjects that did not require writing such as Mathematics, Chemistry, or Physics.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simple Code — Effective UI — Month Picker</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/simple-code-effective-ui-month-picker/</link>
      <pubDate>Thu, 22 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/simple-code-effective-ui-month-picker/</guid>
      <description>&lt;h1 id=&#34;option-1-separate-month-and-year-dropdowns&#34;&gt;Option 1: separate Month and Year dropdowns&lt;/h1&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/simple-code-effective-ui-month-picker/1_QUOjPpvTDXEzv8HbvpJbNQ.png&#34;&#xA;    alt=&#34;Separate month and year dropdowns&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Separate month and year dropdowns&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;It may be verbose, but you have total control over their placements, label, and format&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;January&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;February&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;March&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;April&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;May&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;June&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;July&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;August&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;September&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;October&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;November&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;December&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; Month  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;2021&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;2022&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;2023&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;option&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt; Year&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;option-2-use-the-browsers-built-in-month-picker&#34;&gt;Option 2: use the browser’s built-in month picker&lt;/h1&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/12/simple-code-effective-ui-month-picker/1_dngIUpZUj098xgpOSI526w.png&#34;&#xA;    alt=&#34;Built-in month picker&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Built-in month picker&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;You have less control over the picker’s appearance, but the code is much cleaner. And localization support is free.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The best way to fix Hibernate’s MultipleBagFetchException</title>
      <link>https://geraldnguyen.github.io/posts/2022/12/fixing-hibernate-multiplebagfetchexception/</link>
      <pubDate>Sun, 04 Dec 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/12/fixing-hibernate-multiplebagfetchexception/</guid>
      <description>&lt;p&gt;There are 2 articles from &lt;a href=&#34;https://vladmihalcea.com/hibernate-multiplebagfetchexception/&#34;&gt;https://vladmihalcea.com&lt;/a&gt; describing his analysis and solutions to Hibernate’s MultipleBagFetchException. The &lt;a href=&#34;https://vladmihalcea.com/hibernate-multiplebagfetchexception/&#34;&gt;first&lt;/a&gt; one, appeared around 2020 (when I first researched this problem) or even earlier (2018?), offered an analysis of the problem and a solution using Hibernate’s EntityManager API. The &lt;a href=&#34;https://vladmihalcea.com/spring-data-jpa-multiplebagfetchexception/&#34;&gt;second&lt;/a&gt; one appeared around Jun 2022, and offers a slightly different solution for JPA.&lt;/p&gt;&#xA;&lt;p&gt;I will present below my understanding of his analysis, his solutions, and working sample codes which you can check out and validate your understanding and/or devise your own solutions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unit testing Java’s try-with-resource</title>
      <link>https://geraldnguyen.github.io/posts/2022/11/unit-testing-java-try-with-resource/</link>
      <pubDate>Tue, 29 Nov 2022 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2022/11/unit-testing-java-try-with-resource/</guid>
      <description>&lt;p&gt;Java’s try-with-resource is a convenient syntactic shortcut. It frees developers from keeping track of closeable resources and closing in a &lt;code&gt;finally&lt;/code&gt; block&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://geraldnguyen.github.io/posts/2022/11/unit-testing-java-try-with-resource/1_6jiM4RwfZ3NKj_hUuFw3aQ.png&#34;&#xA;    alt=&#34;Unit testing try-with-resource&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Unit testing try-with-resource&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;&#xA;&lt;p&gt;Some of us may remember doing such boring and lengthy &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;finally&lt;/code&gt;-&lt;code&gt;if-not-null&lt;/code&gt;-&lt;code&gt;close()&lt;/code&gt; A LOT!&lt;/p&gt;&#xA;&lt;p&gt;On a typical day, we performed these steps a dozen times:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Obtained a DB connection, and execute a query within the &lt;code&gt;try {...}&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;And then, to avoid connection leak, we must close the statement and DB connection within the &lt;code&gt;finally {...}&lt;/code&gt; block.&lt;/li&gt;&#xA;&lt;li&gt;Because &lt;code&gt;getConnection()&lt;/code&gt;, &lt;code&gt;prepareStatment()&lt;/code&gt; and &lt;code&gt;executeQuery&lt;/code&gt; could fail, &lt;code&gt;stmt&lt;/code&gt; and &lt;code&gt;conn&lt;/code&gt; could be &lt;code&gt;null&lt;/code&gt; . Hence we performed the not-null check prior to invoke &lt;code&gt;close()&lt;/code&gt; methods.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#6639ba&#34;&gt;executeQuery&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;sql&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;throws&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;SQLException&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;Connection&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;conn&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;PreparedStatement&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;stmt&lt;span style=&#34;color:#1f2328&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;try&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;conn&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;getConnection&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;stmt&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;conn&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;prepareStatement&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;sql&lt;span style=&#34;color:#1f2328&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;stmt&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;executeQuery&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;finally&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;stmt&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;            &lt;/span&gt;stmt&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;conn&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;            &lt;/span&gt;conn&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;();&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#fff&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With try-with-resource, the above can be as short as below, freeing us to focus on other things such as data modeling or tuning query performance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Bootstrap with React</title>
      <link>https://geraldnguyen.github.io/posts/2020/04/2020-04-20-using-bootstrap-with-react/</link>
      <pubDate>Mon, 20 Apr 2020 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2020/04/2020-04-20-using-bootstrap-with-react/</guid>
      <description>&lt;h2 id=&#34;mixing-browser-and-react&#34;&gt;Mixing browser and React&lt;/h2&gt;&#xA;&lt;p&gt;Insert links to Bootstrap&amp;rsquo;s javascript and CSS and its dependencies in app&amp;rsquo;s &lt;code&gt;index.html&lt;/code&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;head&amp;gt;&#xA;  &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css&amp;#34; integrity=&amp;#34;sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&#xA;&amp;lt;/head&amp;gt;&#xA;&#xA;&amp;lt;body&amp;gt;&#xA;&#xA;  &amp;lt;!-- other content --&amp;gt;&#xA;  &#xA;  &amp;lt;script src=&amp;#34;https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js&amp;#34; integrity=&amp;#34;sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&#xA;  &amp;lt;script src=&amp;#34;https://code.jquery.com/jquery-3.4.1.slim.min.js&amp;#34; integrity=&amp;#34;sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;  &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js&amp;#34; integrity=&amp;#34;sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&amp;lt;/body&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Invoke appropriate method via &lt;code&gt;window.$&lt;/code&gt; jQuery object&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;window.$(&amp;#39;#about-modal&amp;#39;).modal()&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;pure-react-way&#34;&gt;Pure React way&lt;/h2&gt;&#xA;&lt;p&gt;Install Bootstrap as a NPM module&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm install bootstrap --save&#xA;npm install jquery popper.js --save &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Load bootstrap CSS and Javascript in React app&amp;rsquo;s entry point (e.g. &lt;code&gt;index.jsx&lt;/code&gt; or &lt;code&gt;app.jsx&lt;/code&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Excel] Bulk Linking Cells to Sheets Whose Name Equates Cell&#39;s value</title>
      <link>https://geraldnguyen.github.io/posts/2013/12/2013-12-30-bulk-linking-cell-to-sheets/</link>
      <pubDate>Tue, 10 Sep 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/12/2013-12-30-bulk-linking-cell-to-sheets/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Sub CreateLinkToSheet()&#xA;    Dim c As Range&#xA;    For Each c In Selection&#xA;        &amp;#39; MsgBox c.Value&#xA;        ActiveSheet.Hyperlinks.Add Anchor:=c, Address:=&amp;#34;&amp;#34;, _&#xA;        SubAddress:=c.Value &amp;amp; &amp;#34;!A1&amp;#34;, TextToDisplay:=c.Value&#xA;    Next c&#xA;End Sub&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;How to run&lt;/strong&gt;: Select the cells to create link and run the macro&lt;/p&gt;</description>
    </item>
    <item>
      <title>[VBA] Save Attachements from Multiple Emails</title>
      <link>https://geraldnguyen.github.io/posts/2013/09/2013-09-02-save-attachments-from-multiple-emails/</link>
      <pubDate>Mon, 02 Sep 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/09/2013-09-02-save-attachments-from-multiple-emails/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Prerequisite&lt;/strong&gt;: Enable Developer tab, macro security and create “C:\mailattachment\” folder if not exists&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Instruction&lt;/strong&gt;: Select emails which have attachment to save (e.g. email containing daily report), select Developer, Macro, SaveAttachment&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Sub SaveAttachment()&#xA;    Dim myOlapp As Outlook.Application&#xA;    Dim myNameSpace As Outlook.NameSpace&#xA;    Dim myFolder As Outlook.MAPIFolder&#xA;    Dim myItem As Outlook.MailItem&#xA;    Dim myAttachment As Outlook.Attachment&#xA;    Dim I As Long&#xA;      &#xA;    Set myOlapp = CreateObject(&amp;#34;Outlook.Application&amp;#34;)&#xA;    &amp;#39;Set myNameSpace = myOlapp.GetNamespace(&amp;#34;MAPI&amp;#34;)&#xA;    &amp;#39;Set myFolder = myNameSpace.GetDefaultFolder(olFolderInbox)&#xA;    &amp;#39;Set myFolder = myFolder.Folders(&amp;#34;Ethsys&amp;#34;)&#xA;    &amp;#39;Set myFolder = myFolder.Folders(&amp;#34;Ethsys Operation Alert&amp;#34;)&#xA;      &#xA;    &amp;#39;For Each myItem In myFolder.Items&#xA;        &amp;#39;If myItem.Attachments.Count &amp;lt;&amp;gt; 0 Then&#xA;            &amp;#39;For Each myAttachment In myItem.Attachments&#xA;                &amp;#39;MsgBox myAttachment.FileName&#xA;            &amp;#39;Next&#xA;        &amp;#39;End If&#xA;    &amp;#39;Next&#xA;     &#xA;     &#xA;    For Each myItem In Application.ActiveExplorer.Selection&#xA;        If myItem.Attachments.Count &amp;lt;&amp;gt; 0 Then&#xA;            For Each myAttachment In myItem.Attachments&#xA;                &amp;#39;MsgBox myAttachment.FileName&#xA;                myAttachment.SaveAsFile (&amp;#34;C:\mailattachment\&amp;#34; &amp;amp; myAttachment.DisplayName)&#xA;            Next&#xA;        End If&#xA;    Next&#xA;     &#xA;End Sub&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>[Database] Exists or Inner Join: Duplicate Records</title>
      <link>https://geraldnguyen.github.io/posts/2013/06/2013-06-16-database-exist-or-inner-join-duplicate-transactions/</link>
      <pubDate>Sun, 16 Jun 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/06/2013-06-16-database-exist-or-inner-join-duplicate-transactions/</guid>
      <description>&lt;h2 id=&#34;inner-join-vs-exists&#34;&gt;INNER JOIN vs. EXISTS&lt;/h2&gt;&#xA;&lt;p&gt;Often, EXISTS and INNER JOIN can be used interchangeably to query data with existence in 2 or more tables. However, it is not always the case. There is an important inherent characteristics of INNER JOIN that every developer should keep in mind: INNER JOIN result may contain DUPLICATE data record. This is important for uniqueness-sensitive handling of query result (e.g. record count), or when migrating database table with unique constraints.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Which Form of String Comparison Is Supported</title>
      <link>https://geraldnguyen.github.io/posts/2013/05/2013-05-21-which-form-of-string-comparison-is-supported/</link>
      <pubDate>Tue, 21 May 2013 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2013/05/2013-05-21-which-form-of-string-comparison-is-supported/</guid>
      <description>&lt;p&gt;Below example is for Oracle DB, but adopting for other DBMS e.g. Sybase, MS SQL… should be straightforward.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;select ‘both no space’ as “String comparison in Oracle” from dual where ‘a’ = ‘a’&#xA;--&#xA;union&#xA;select ‘right has single trailing space’ from dual where ‘a’ = ‘a ‘&#xA;union&#xA;select ‘right has multiple trailing space’ from dual where ‘a’ = ‘a   ‘&#xA;union&#xA;select ‘right has single leading space’ from dual where ‘a’ = ‘ a’&#xA;union&#xA;select ‘right has multiple leading space’ from dual where ‘a’ = ‘    a’&#xA;--&#xA;union&#xA;select ‘left has single trailing space’ from dual where ‘a ‘ = ‘a’&#xA;union&#xA;select ‘left has multiple trailing space’ from dual where ‘a   ‘ = ‘a’&#xA;union&#xA;select ‘left has single leading space’ from dual where ‘ a’ = ‘a’&#xA;union&#xA;select ‘left has multiple leading space’ from dual where ‘    a’ = ‘a’&#xA;--&#xA;union&#xA;select ‘right has single leading and trailing space’ from dual where ‘a’ = ‘ a ‘&#xA;union&#xA;select ‘right has multiple leading and trailing space’ from dual where ‘a’ = ‘    a   ‘&#xA;union&#xA;select ‘left has single leading and trailing space’ from dual where ‘ a ‘ = ‘a’&#xA;union&#xA;select ‘left has multiple leading and trailing space’ from dual where ‘   a      ‘ = ‘a’&#xA;—-&#xA;union&#xA;select ‘both has leading and trailing space but leading space are different’ from dual where ‘ a ‘ = ‘  a ‘&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>How do you initialize an EJB3 Stateful Session Bean ?</title>
      <link>https://geraldnguyen.github.io/posts/2010/11/2010-11-10-initialize-ejb3-stateful-session-bean/</link>
      <pubDate>Sat, 20 Nov 2010 09:19:42 +0100</pubDate>
      <guid>https://geraldnguyen.github.io/posts/2010/11/2010-11-10-initialize-ejb3-stateful-session-bean/</guid>
      <description>&lt;p&gt;In EJB 3, we can obtain a reference to Stateful Session Bean either either by using &lt;code&gt;@EJB &lt;/code&gt;annotation or performing JNDI look-up. Yet these 2 methods do not offer you a way to initialize a Stateful SB as EJB 2.1  Home interface&amp;rsquo;s &lt;code&gt;createMETHODs&lt;/code&gt; do.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;StatefulSB bean = home.create (arg0, arg1, arg2);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EJB3 defines &lt;code&gt;@Init&lt;/code&gt; annotation as a replacement for EJB 2.1 &lt;code&gt;createMETHOD&lt;/code&gt;. But it is intended for bean written to 2.1 client view (that means you will need to define an home interface and annotate the bean class with &lt;code&gt;@RemoteHome&lt;/code&gt; or &lt;code&gt;@LocalHome&lt;/code&gt; annotations)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
